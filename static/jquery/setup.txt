

  ///////////////////////////////////////////////////////////////
  //
  // plugin.tx_caddy_pi1
  // page.includeCss
  // caddyCheckOut: PAGE object with the caddy check-out



  ///////////////////////////////////////////////////////////////
  //
  // plugin.tx_caddy_pi1
  // page.includeCss

plugin.tx_caddy_pi1 {
    // ajax, jquery
  javascript =
  javascript {
      // caddyCheckOut
    ajax =
    ajax {
        // typeNum, config, 10
      caddyCheckOut = PAGE
      caddyCheckOut {
        typeNum = {$plugin.caddy.typeNum.caddyCheckOut}
        config {
          disableAllHeaderCode  = 1
          xhtml_cleaning        = 0
          admPanel              = 0
          metaCharset           = UTF-8
        }
        10 < styles.content.get
      }
    }
      // plugins
    jquery =
    jquery {
        // caddy, fancybox
      plugins =
      plugins {
          // library, localisation, plugin
        caddy =
        caddy {
            // path, marker
          css = 
          css {
              // [STRING] Path to the jquery inline css
            path = EXT:caddy/res/javascript/jquery.caddy-4.0.0/css/inline.css
              // pmuidfieldemail, pmuidfieldrevocation, pmuidfieldterms, t3caddyalert, t3caddyconsoledebug, typenum
            marker  =
            marker {
                // Uid of the powermail field e-mail
              pmuidfieldemail = COA
              pmuidfieldemail {
                  // uid, if constant is set
                10 = TEXT
                10 {
                  if {
                    isTrue = {$plugin.caddy.powermail.fields.email}
                  }
                  value = {$plugin.caddy.powermail.fields.email}
                }
                  // constant label, if constant isn't set
                20 = TEXT
                20 {
                  if {
                    isFalse = {$plugin.caddy.powermail.fields.email}
                  }
                  value = "plugin.caddy.powermail.fields.email is empty!"
                }
              }
                // Uid of the powermail field revocation
              pmuidfieldrevocation = COA
              pmuidfieldrevocation {
                  // uid, if constant is set
                10 = TEXT
                10 {
                  if {
                    isTrue = {$plugin.caddy.powermail.fields.revocation}
                  }
                  value = {$plugin.caddy.powermail.fields.revocation}
                }
                  // constant label, if constant isn't set
                20 = TEXT
                20 {
                  if {
                    isFalse = {$plugin.caddy.powermail.fields.revocation}
                  }
                  value = "plugin.caddy.powermail.fields.revocation is empty!"
                }
              }
                // Uid of the powermail field terms and conditions
              pmuidfieldterms = COA
              pmuidfieldterms {
                  // uid, if constant is set
                10 = TEXT
                10 {
                  if {
                    isTrue = {$plugin.caddy.powermail.fields.terms}
                  }
                  value = {$plugin.caddy.powermail.fields.terms}
                }
                  // constant label, if constant isn't set
                20 = TEXT
                20 {
                  if {
                    isFalse = {$plugin.caddy.powermail.fields.terms}
                  }
                  value = "plugin.caddy.powermail.fields.terms is empty!"
                }
              }
                // Enable/Disable JSS alerts
              t3caddyalert = TEXT
              t3caddyalert {
                value = 1
              }
                // Enable/Disable debug prompts to the firebug console
              t3caddyconsoledebug = TEXT
              t3caddyconsoledebug {
                value = 1
              }
              typenum = TEXT
              typenum {
                value = {$plugin.caddy.typeNum.caddyCheckOut}
              }
            }
          }
            // path, footer, inline, marker
          library = 
          library {
              // [STRING] Path to the jquery library
            path = EXT:caddy/res/javascript/jquery.caddy-4.0.0/library/tx_caddy_pi1-4.0.0.js
              // [Boolean] 1 (default): place JSS scripts in the footer section
            footer = 1
              // [Boolean] 0: link to the script file, 1 (default): include the script inline
            inline = 1
              // pmuidfieldemail, pmuidfieldrevocation, pmuidfieldterms, t3caddyalert, t3caddyconsoledebug, typenum
            marker  =
            marker {
              lang = TEXT
              lang {
                data  = TSFE:lang
              }
                // Uid of the powermail field e-mail
              pmuidfieldemail = COA
              pmuidfieldemail {
                  // uid, if constant is set
                10 = TEXT
                10 {
                  if {
                    isTrue = {$plugin.caddy.powermail.fields.email}
                  }
                  value = {$plugin.caddy.powermail.fields.email}
                }
                  // constant label, if constant isn't set
                20 = TEXT
                20 {
                  if {
                    isFalse = {$plugin.caddy.powermail.fields.email}
                  }
                  value = "plugin.caddy.powermail.fields.email is empty!"
                }
              }
                // Uid of the powermail field revocation
              pmuidfieldrevocation = COA
              pmuidfieldrevocation {
                  // uid, if constant is set
                10 = TEXT
                10 {
                  if {
                    isTrue = {$plugin.caddy.powermail.fields.revocation}
                  }
                  value = {$plugin.caddy.powermail.fields.revocation}
                }
                  // constant label, if constant isn't set
                20 = TEXT
                20 {
                  if {
                    isFalse = {$plugin.caddy.powermail.fields.revocation}
                  }
                  value = "plugin.caddy.powermail.fields.revocation is empty!"
                }
              }
                // Uid of the powermail field terms and conditions
              pmuidfieldterms = COA
              pmuidfieldterms {
                  // uid, if constant is set
                10 = TEXT
                10 {
                  if {
                    isTrue = {$plugin.caddy.powermail.fields.terms}
                  }
                  value = {$plugin.caddy.powermail.fields.terms}
                }
                  // constant label, if constant isn't set
                20 = TEXT
                20 {
                  if {
                    isFalse = {$plugin.caddy.powermail.fields.terms}
                  }
                  value = "plugin.caddy.powermail.fields.terms is empty!"
                }
              }
                // Enable/Disable JSS alerts
              t3caddyalert = TEXT
              t3caddyalert {
                value = 1
              }
                // Enable/Disable debug prompts to the firebug console
              t3caddyconsoledebug = TEXT
              t3caddyconsoledebug {
                value = 1
              }
              typenum = TEXT
              typenum {
                value = {$plugin.caddy.typeNum.caddyCheckOut}
              }
            }
          }
            // path, footer, inline
          localisation = 
          localisation {
              // [STRING] Path to the jss file of the t3caddy localisation. ###LANG### will be replacedwhile runtime
            path    = EXT:caddy/res/javascript/jquery.caddy-4.0.0/plugin/localisation-4.0.0.###LANG###.js
              // [Boolean] 1 (default): place JSS scripts in the footer section
            footer  = 1
              // [Boolean] 0 (default): link to the script file, 1: include the script inline
            inline  = 0
          }
            // path, footer, inline
          plugin = 
          plugin {
              // [String] Path to the jss file of the t3caddy plugin
            path    = EXT:caddy/res/javascript/jquery.caddy-4.0.0/plugin/jquery.t3caddy-4.0.0.js
              // [Boolean] 1 (default): place JSS scripts in the footer section
            footer  = 1
              // [Boolean] 0 (default): link to the script file, 1: include the script inline
            inline  = 0
          }
        }
          // enabled, configuration, plugin
        fancybox =
        fancybox {
            // [String] yes || no
          enabled = {$plugin.caddy.fancybox.enabled}
            // fancybox, fancyboxPosition, fancyboxLibrary, fancyboxCSS, source, sourcePosition
          includes =
          includes {
              // Fancybox: Include the jQuery fancybox library (1.3.4) and CSS provided by Caddy. If you are using another fancybox library and CSS, please set this option to "disabled"
            fancybox = {$plugin.caddy.jquery.fancybox}
              // Fancybox CSS
            fancyboxCSS = <link rel="stylesheet" type="text/css" href="{$plugin.caddy.jquery.fancyboxCSS}" media="screen" />
              // Fancybox library
            fancyboxLibrary = <script src="{$plugin.caddy.jquery.fancyboxLibrary}" type="text/javascript"></script>
              // Fancybox position : Place the jQuery fancybox library at the top of the page (HTML head) or at the bottom
            fancyboxPosition = {$plugin.caddy.jquery.fancyboxPosition}
              // jQuery : jQuery: Use the jQuery library (1.4.3) provided by the fancybox. If you are using another jquery library, please set this option to "disabled"
            source = {$plugin.caddy.jquery.source}
              // Fancybox library
            sourceLibrary = <script src="{$plugin.caddy.jquery.sourceLibrary}" type="text/javascript"></script>
              // jQuery position : Place the jQuery library at the top of the page (HTML head) or at the bottom
            sourcePosition = {$plugin.caddy.jquery.sourcePosition}
          }
            // params, paramsSpaceLeft, script, variables
          javascript = 
          javascript {
              // autoScale, ..., width
            params = 
            params {
                // autoScale : If true, FancyBox is scaled to fit in viewport 
              autoScale = {$plugin.caddy.fancybox.autoScale}
                // autoDimensions : For inline and ajax views, resizes the view to the element recieves. Make sure it has dimensions otherwise this will give unexpected results
              autoDimensions = {$plugin.caddy.fancybox.autoDimensions}
                // centerOnScroll : When true, FancyBox is centered while scrolling page
              centerOnScroll = {$plugin.caddy.fancybox.centerOnScroll}
                // enableEscapeButton : Toggle if pressing Esc button closes FancyBox
              enableEscapeButton = {$plugin.caddy.fancybox.enableEscapeButton}
                // height : Height for content types 'iframe' and 'swf'. Also set for inline content if 'autoDimensions' is set to 'false'
              height = TEXT
              height {
                value = {$plugin.caddy.fancybox.height}
                wrap  = '|'
              }
                // hideOnOverlayClick : Toggle if clicking the overlay should close FancyBox
              hideOnOverlayClick = {$plugin.caddy.fancybox.hideOnOverlayClick}
                // hideOnContentClick : Toggle if clicking the content should close FancyBox
              hideOnContentClick = {$plugin.caddy.fancybox.hideOnContentClick}
                // cyclic : When true, galleries will be cyclic, allowing you to keep pressing next/back.
              cyclic = {$plugin.caddy.fancybox.cyclic}
                // margin : Space between viewport and FancyBox wrapper
              margin = {$plugin.caddy.fancybox.margin}
                // modal : When true, 'overlayShow' is set to 'true' and 'hideOnOverlayClick', 'hideOnContentClick', 'enableEscapeButton', 'showCloseButton' are set to 'false'
              modal = {$plugin.caddy.fancybox.modal}
                // opacity : When true, transparency of content is changed for elastic transitions
              opacity = {$plugin.caddy.fancybox.opacity}
                // overlayColor : Color of the overlay
              overlayColor = TEXT
              overlayColor {
                value = {$plugin.caddy.fancybox.overlayColor}
                wrap  = '|'
              }
                // overlayOpacity : Opacity of the overlay (from 0 to 1; default - 0.3)
              overlayOpacity = {$plugin.caddy.fancybox.overlayOpacity}
                // overlayShow : Toggle overlay
              overlayShow = {$plugin.caddy.fancybox.overlayShow}
                // padding : Space between FancyBox wrapper and content
              padding = {$plugin.caddy.fancybox.padding}
                // scrolling : Set the overflow CSS property to create or hide scrollbars. Can be set to 'auto', 'yes', or 'no'
              scrolling = TEXT
              scrolling {
                value = {$plugin.caddy.fancybox.scrolling}
                wrap  = '|'
              }
                // showCloseButton : Toggle close button
              showCloseButton = {$plugin.caddy.fancybox.showCloseButton}
                // showNavArrows : Toggle navigation arrows
              showNavArrows = {$plugin.caddy.fancybox.showNavArrows}
                // speedIn : Speed of the fade and elastic transitions, in milliseconds
              speedIn = {$plugin.caddy.fancybox.speedIn}
                // speedOut : Speed of the fade and elastic transitions, in milliseconds
              speedOut = {$plugin.caddy.fancybox.speedOut}
                // title : Forces title. Take a field of the current record.
              title = TEXT
              title {
                field = {$plugin.caddy.fancybox.title}
                wrap  = '|'
              }
                // titleShow : Toggle title
              titleShow = {$plugin.caddy.fancybox.titleShow}
                // titlePosition : The position of title. Can be set to 'outside', 'inside' or 'over'
              titlePosition = TEXT
              titlePosition {
                value = {$plugin.caddy.fancybox.titlePosition}
                wrap  = '|'
              }
                // transitionIn : The transition type. Can be set to 'elastic', 'fade' or 'none'
              transitionIn = TEXT
              transitionIn {
                value = {$plugin.caddy.fancybox.transitionIn}
                wrap  = '|'
              }
                // transitionOut : The transition type. Can be set to 'elastic', 'fade' or 'none'
              transitionOut = TEXT
              transitionOut {
                value = {$plugin.caddy.fancybox.transitionOut}
                wrap  = '|'
              }
                // type : Forces content type. Can be set to 'image', 'ajax', 'iframe', 'swf' or 'inline'
              type = TEXT
              type {
                value = {$plugin.caddy.fancybox.type}
                wrap  = '|'
              }
                // width : Width for content types 'iframe' and 'swf'. Also set for inline content if 'autoDimensions' is set to 'false'
              width = TEXT
              width {
                value = {$plugin.caddy.fancybox.width}
                wrap  = '|'
              }
            }
              // HTML space left for fancybox parameters - for a nice HTML code only
            paramsSpaceLeft = 22
              // Script
            XX_script (

              <script type="text/javascript">
                $(document).ready(function() {
                  $(".c%uid%_step").fancybox({
                    %params%
                    ajax : {
                      type : 'GET',
                      data : 'type=53679'
                    },
                    onComplete : function() {
                        // HTML unique class of the fieldset delivery address
                      var fieldset_delivery_address  = ".powermail_fieldset_22";
                        // RETURN there isn't any HTML element with the defined class
                      if( ! $( fieldset_delivery_address ).length )
                      {
                        return;
                      }
                        // Hide all fields (divs) of the fieldset delivery address
                      $( fieldset_delivery_address ).children( 'div' )
                        .slideUp( 'fast' );
                      var bool_visible = false;
                    }
                   });
                });
              </script>
)
            XX_script (

              <script type="text/javascript">
                  $(".c%uid%_step").live('click', function() {
                    $this = $(this);
                    $.fancybox({
                      %params%
                      ajax : {
                        type : 'POST',
                        data : 'type=53679'
                      },
                      onComplete : function() {
                          // HTML unique class of the fieldset delivery address
                        var fieldset_delivery_address  = ".powermail_fieldset_22";
                          // RETURN there isn't any HTML element with the defined class
                        if( ! $( fieldset_delivery_address ).length )
                        {
                          return;
                        }
                          // Hide all fields (divs) of the fieldset delivery address
                        $( fieldset_delivery_address ).children( 'div' )
                          .slideUp( 'fast' );
                        var bool_visible = false;
                      }
                      });
                    return false;
                  });
              </script>
)
            XX_script (

              <script type="text/javascript">
                $(document).on('click', '.c%uid%_step', function() {
                  // remove the class to ensure this will only run once
                  $(this).removeClass('c%uid%_step');
                  // now attach fancybox and click to open it
                  $(this).fancybox({
                    %params%
                    ajax : {
                      type : 'POST',
                      data : 'type=53679'
                    },
                    onComplete : function() {
                        // HTML unique class of the fieldset delivery address
                      var fieldset_delivery_address  = ".powermail_fieldset_22";
                        // RETURN there isn't any HTML element with the defined class
                      if( ! $( fieldset_delivery_address ).length )
                      {
                        return;
                      }
                        // Hide all fields (divs) of the fieldset delivery address
                      $( fieldset_delivery_address ).children( 'div' )
                        .slideUp( 'fast' );
                      var bool_visible = false;
                    }
                  }).click();
                  // prevent default action
                  return false;
                });
              </script>
)
              // Variables for the javascript
            variables = 
            variables {
                // field:uid
              uid = TEXT
              uid {
                value       = {field:uid}
                insertData  = 1
              }
            } 
          }
        }
      }
    }
  }
    // caddyCheckOut
  typeNum = 
  typeNum {
    caddyCheckOut = {$plugin.caddy.typeNum.caddyCheckOut}
  }
}
  // plugin.tx_caddy_pi1



  ///////////////////////////////////////////////////////////////
  //
  // page.includeCss

page {
  includeCSS {
    caddyJQuery = EXT:caddy/res/javascript/jquery.caddy-4.0.0/css/static.css
  }
}
  // page.includeCss



  ///////////////////////////////////////////////////////////////
  //
  // caddyCheckOut: PAGE object with the caddy check-out

caddyCheckOut < plugin.tx_caddy_pi1.javascript.ajax.caddyCheckOut

[globalVar = GP:type = {$plugin.caddy.typeNum.caddyCheckOut}]
    // Don't handle header of the content element (plugin)
  lib.stdheader >
[global]
  // caddyCheckOut: PAGE object with the caddy check-out