

  ///////////////////////////////////////////////////////////////
  //
  // INDEX
  //
  // includeLibs
  // plugin.tx_caddy_pi1
  // plugin.tx_caddy_pi1.pdf.deliveryorder
  // plugin.tx_caddy_pi1.pdf.invoice
  // plugin.tx_caddy_pi1.pdf.revocation
  // plugin.tx_caddy_pi1.pdf.terms
  // plugin.tx_caddy_pi2
  // plugin.tx_caddy_pi3



  ///////////////////////////////////////////////////////////////
  //
  // includeLibs

includeLibs {
  tx_caddy_powermail        = EXT:caddy/lib/powermail/class.tx_caddy_powermail.php
  tx_caddy_session          = EXT:caddy/lib/class.tx_caddy_session.php
  tx_caddy_userfunc         = EXT:caddy/lib/userfunc/class.tx_caddy_userfunc.php
}
  // includeLibs



  ///////////////////////////////////////////////////////////////
  //
  // plugin.tx_caddy_pi1

plugin.tx_caddy_pi1 {
    // Minimum price
  cart =
  cart {
    cartmin {
      # set a value for minimal price, this value will be compared with the gross price excluding service cost
      value =
    }
  }
    // template, currency properties, service attributes
  main = 
  main {
    template        = {$plugin.caddy.main.template}
    decimal         = {$plugin.caddy.main.decimal}
    dec_point       = {$plugin.caddy.main.dec_point}
    thousands_sep   = {$plugin.caddy.main.thousands_sep}
    currencySymbol  = {$plugin.caddy.main.currencySymbol}
    currencySymbolBeforePrice = {$plugin.caddy.main.currencySymbolBeforePrice}
    quantitySymbol  = {$plugin.caddy.main.quantitySymbol}
    service_attribute_1_symbol = {$plugin.caddy.main.service_attribute_1_symbol}
    service_attribute_2_symbol = {$plugin.caddy.main.service_attribute_2_symbol}
    service_attribute_3_symbol = {$plugin.caddy.main.service_attribute_3_symbol}
    pid              = {$plugin.caddy.main.pid}
  }
      // sumNet, sumGross, price_total, service_costs, odernumber, target, taxrates, tax
    overall =
    overall {

      optionsNet = COA
      optionsNet {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = optionsNet

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      optionsGross = COA
      optionsGross {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = optionsGross

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      productsGross = COA
      productsGross {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = productsGross

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      productsNet = COA
      productsNet {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = productsNet

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      sumNet = COA
      sumNet {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = sumNet

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      sumGross = COA
      sumGross {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = sumGross

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      sumTaxNormal = COA
      sumTaxNormal {
        if.isTrue.field = sumTaxNormal
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = sumTaxNormal

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      sumTaxReduced = COA
      sumTaxReduced {
        if.isTrue.field = sumTaxReduced
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = sumTaxReduced

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      target = TEXT
      target {
        value = x
        typolink.parameter.data = page:alias//TSFE:id
        typolink.returnLast = url
      }

      taxrate_reduced_string = TEXT
      taxrate_reduced_string {
        value = including
        lang { 
          de = inklusive 
          en = including
        }
        if {
          isTrue {
            field = sumTaxReduced
          }
        }
        noTrimWrap = || {$plugin.caddy.tax.reduced}% |
      }

      taxrate_normal_string = TEXT
      taxrate_normal_string {
        value = including
        lang { 
          de = inklusive 
          en = including
        }
        if {
          isTrue {
            field = sumTaxNormal
          }
        }
        noTrimWrap = || {$plugin.caddy.tax.normal}% |
      }
    }
    // table, title, price, tax, sku, min, max, service attributes
  db =
  db {
    table = {$plugin.caddy.db.table}
    title = {$plugin.caddy.db.title}
    price = {$plugin.caddy.db.price}
    tax   = {$plugin.caddy.db.tax}
    sku   = {$plugin.caddy.db.sku}
    min   = {$plugin.caddy.db.min}
    max   = {$plugin.caddy.db.max}
    service_attribute_1   = {$plugin.caddy.db.service_attribute_1}
    service_attribute_2   = {$plugin.caddy.db.service_attribute_2}
    service_attribute_3   = {$plugin.caddy.db.service_attribute_3}
  }

  debug  = {$plugin.caddy.debug.paramsAndTs}

    // qry, service attributes, puid, sku
  gpvar =
  gpvar {
    qty   = {$plugin.caddy.gpvar.qty}
    service_attribute_1   = {$plugin.caddy.gpvar.service_attribute_1}
    service_attribute_2   = {$plugin.caddy.gpvar.service_attribute_2}
    service_attribute_3   = {$plugin.caddy.gpvar.service_attribute_3}
    puid  = {$plugin.caddy.gpvar.puid}
    sku   = {$plugin.caddy.gpvar.sku}
  }

    // payment, shipping, special
  options =
  options {
      // preset, options
    payment =
    payment {
        // default method
      preset = 1
        // cash in advance, invoice, cash on delivery
      options =
      options {
          // cash in advance: title, extra, tax
        1 =
        1 {
            // title of payment method
          title = TEXT
          title {
            data = LLL:EXT:caddy/pi1/locallang.xml:paymentoption_cashinadvance
          }
            // extra cost (gross price) of payment method
          extra = 0.00
            // tax rate which will be applied (reduced or normal)
          tax = normal
        }
          // invoice: title, extra, tax
        2 =
        2 {
            // title of payment method
          title = TEXT
          title {
            data = LLL:EXT:caddy/pi1/locallang.xml:paymentoption_invoice
          }
            // extra cost (gross price) of payment method
          extra = 3.00
            // tax rate which will be applied (reduced or normal)
          tax = normal
        }
          // cash on delivery: title, extra, tax
        3 =
        3 {
            // title of payment method
          title = TEXT
          title {
            data = LLL:EXT:caddy/pi1/locallang.xml:paymentoption_cashondelivery
          }
            // extra cost (gross price) of payment method
          extra = 15.00
            // tax rate which will be applied (reduced or normal)
          tax = normal
        }
      }
    }
      // preset, options
    shipping =
    shipping {
        // default method
      preset = 1
        // maildefault, mailexpress
      options =
      options {
          // maildefault: title, extra, tax
        1 =
        1 {
            // title of shipping method
          title = TEXT
          title {
            data = LLL:EXT:caddy/pi1/locallang.xml:shippingoption_maildefault
          }
            // extra cost (gross price) of shipping method
          extra = 0.00
            // tax rate which will be applied (reduced or normal)
          tax = normal
        }
          // title, extra, tax
        2 =
        2 {
            // mailexpress: title of shipping method
          title = TEXT
          title {
            data = LLL:EXT:caddy/pi1/locallang.xml:shippingoption_mailexpress
          }
            // extra cost (gross price) of shipping method
          extra = 12.00
            // tax rate which will be applied (reduced or normal)
          tax = normal
        }
      }
    }
      // preset, options
    special =
    special {
        // neutralpackage, addfeeforislands
      options {
          // neutralpackage: title of payment method
        1 =
        1 {
            // title of payment method
          title = TEXT
          title {
            data = LLL:EXT:caddy/pi1/locallang.xml:specialoption_neutralpackage
          }
            // extra cost (gross price) of payment method
          extra = 0.00
            // tax rate which will be applied (reduced or normal)
          tax = normal
        }
          // addfeeforislands: title of payment method
        2 =
        2 {
            // title of payment method
          title = TEXT
          title {
            data = LLL:EXT:caddy/pi1/locallang.xml:specialoption_addfeeforislands
          }
            // extra cost (gross price) of payment method
          extra = 13.00
            // tax rate which will be applied (reduced or normal)
          tax = reduced
        }
      }
    }
  }

    // titel, price, qty, sku, min, max, weight, volume, tax, puid, cid, fields, overall, powermailCaddy
  settings =
  settings {

    # GET or POST param for title (if not empty: Overwrite values from db request with puid)
    title = TEXT
    title {
      data = GP:{$plugin.caddy.gpvar.title}
      htmlSpecialChars = 1
    }

    # GET or POST param for price (if not empty: Overwrite values from db request with puid)
    price = TEXT
    price {
      data = GP:{$plugin.caddy.gpvar.price}
      htmlSpecialChars = 1
    }

    # GET or POST param for qty
    qty = TEXT
    qty {
      data = GP:{$plugin.caddy.gpvar.qty}
      intval = 1
    }

    # GET or POST param for sku
    sku = TEXT
    sku {
      data = GP:{$plugin.caddy.gpvar.sku}
      htmlSpecialChars = 1
    }

    # GET or POST param for min
    min = TEXT
    min {
      data = GP:{$plugin.caddy.gpvar.min}
      htmlSpecialChars = 1
    }

    # GET or POST param for max
    max = TEXT
    max {
      data = GP:{$plugin.caddy.gpvar.max}
      htmlSpecialChars = 1
    }

    # GET or POST param for weight
    weight = TEXT
    weight {
      data = GP:{$plugin.caddy.gpvar.weight}
      floatval = 1
    }

    # GET or POST param for volume
    volume = TEXT
    volume {
      data = GP:{$plugin.caddy.gpvar.volume}
      floatval = 1
    }

    # Param for tax (will be overwritten from db request)
    tax = TEXT
    tax.value = {$plugin.caddy.tax.normalCalc}

    # GET or POST param for product uid
    puid = TEXT
    puid {
      data = GP:{$plugin.caddy.gpvar.puid}
      intval = 1
    }

    # GET or POST param for content id
    cid = TEXT
    cid {
      data = GP:{$plugin.caddy.gpvar.cid}
      intval = 1
    }

      // titel, puid, qty, service attributes, min, max, sku, price, delete, tax
    fields =
    fields {
      title = TEXT
      title.field = title

      puid = TEXT
      puid.field = puid

      qty = TEXT
      qty.field = qty

      service_attribute_1 = TEXT
      service_attribute_1.field = service_attribute_1

      service_attribute_2 = TEXT
      service_attribute_2.field = service_attribute_2

      service_attribute_3 = TEXT
      service_attribute_3.field = service_attribute_3

      min = TEXT
      min.field = min

      max = TEXT
      max.field = max

      sku = TEXT
      sku.field = sku

      price = COA
      price {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = price

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      price_total = COA
      price_total {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = price_total

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      delete = IMAGE
      delete {
        file = EXT:caddy/files/img/delete_100_02.png
        altText = delete product
        titleText.data = LLL:EXT:caddy/pi1/locallang.xml:delete
        params = class="caddy_delete"
        imageLinkWrap = 1
        imageLinkWrap {
          enable = 1
          typolink.parameter.data = page:alias//TSFE:id
          typolink.additionalParams.wrap = &tx_caddy_pi1[del]=|
          typolink.additionalParams.field = puid
        }
      }

      tax = CASE
      tax {
        key.field = tax

        default = TEXT
        default {
          current = 1
          setCurrent.field = price_total
          setCurrent.wrap = (| / (1 + ###TAX###)) * (###TAX###)
          prioriCalc = 1
        }

        # reduced tax
        1 = TEXT
        1 {
          current = 1
          setCurrent.field = price_total
          setCurrent.wrap = (| / (1 + {$plugin.caddy.tax.reducedCalc})) * ({$plugin.caddy.tax.reducedCalc})
          prioriCalc = 1
        }

        # normal tax
        2 = TEXT
        2 {
          current = 1
          setCurrent.field = price_total
          setCurrent.wrap = (| / (1 + {$plugin.caddy.tax.normalCalc})) * ({$plugin.caddy.tax.normalCalc})
          prioriCalc = 1
        }
      }
    }

      // caddy within the powermail email: fields, overall
    powermailCaddy =
    powermailCaddy {
        // titel, puid, qty, service attributes, min, max, sku, price, price_total, delete, tax
      fields < plugin.tx_caddy_pi1.settings.fields
        // optionsNet, optionsGross, productsNet, productsGross, sumNet, sumGross, sumTaxNormal, sumTaxReduced, target, taxrate_reduced_string, taxrate_normal_string, payment_note, shipping_note, paymentLabel 
      overall < plugin.tx_caddy_pi1.settings.overall

      overall {
        shippingLabel = TEXT
        shippingLabel.field = shippingLabel

        paymentLabel = TEXT
        paymentLabel.field = paymentLabel

        specialLabels = TEXT
        specialLabels.field = specialLabels
      }
    }
  }

    // optionspaymentsumnet
  sum =
  sum {
    optionspaymentsumgross = COA
    optionspaymentsumgross {
      10 = USER
      10.userFunc = tx_caddy_userfunc->numberformat
      10.userFunc {
        number = TEXT
        number.field = optionspaymentsumgross
        decimal = 2
        dec_point = {$plugin.caddy.main.dec_point}
        thousands_sep = {$plugin.caddy.main.thousands_sep}
        drs = {$plugin.caddy.debug.userfunc}
      }
      20 = TEXT
      20 {
        value = {$plugin.caddy.main.currencySymbol}
        noTrimWrap = | ||
      }
    }
    optionspaymentsumnet = COA
    optionspaymentsumnet {
      10 = USER
      10.userFunc = tx_caddy_userfunc->numberformat
      10.userFunc {
        number = TEXT
        number.field = optionspaymentsumnet
        decimal = 2
        dec_point = {$plugin.caddy.main.dec_point}
        thousands_sep = {$plugin.caddy.main.thousands_sep}
        drs = {$plugin.caddy.debug.userfunc}
      }
      20 = TEXT
      20 {
        value = {$plugin.caddy.main.currencySymbol}
        noTrimWrap = | ||
      }
    }
    optionspaymentsumtaxnormal = COA
    optionspaymentsumtaxnormal {
      10 = USER
      10.userFunc = tx_caddy_userfunc->numberformat
      10.userFunc {
        number = TEXT
        number.field = optionspaymentsumtaxnormal
        decimal = 2
        dec_point = {$plugin.caddy.main.dec_point}
        thousands_sep = {$plugin.caddy.main.thousands_sep}
        drs = {$plugin.caddy.debug.userfunc}
      }
      20 = TEXT
      20 {
        value = {$plugin.caddy.main.currencySymbol}
        noTrimWrap = | ||
      }
    }
    optionspaymentsumtaxreduced = COA
    optionspaymentsumtaxreduced {
      10 = USER
      10.userFunc = tx_caddy_userfunc->numberformat
      10.userFunc {
        number = TEXT
        number.field = optionspaymentsumtaxreduced
        decimal = 2
        dec_point = {$plugin.caddy.main.dec_point}
        thousands_sep = {$plugin.caddy.main.thousands_sep}
        drs = {$plugin.caddy.debug.userfunc}
      }
      20 = TEXT
      20 {
        value = {$plugin.caddy.main.currencySymbol}
        noTrimWrap = | ||
      }
    }
    optionsshippingsumgross = COA
    optionsshippingsumgross {
      10 = USER
      10.userFunc = tx_caddy_userfunc->numberformat
      10.userFunc {
        number = TEXT
        number.field = optionsshippingsumgross
        decimal = 2
        dec_point = {$plugin.caddy.main.dec_point}
        thousands_sep = {$plugin.caddy.main.thousands_sep}
        drs = {$plugin.caddy.debug.userfunc}
      }
      20 = TEXT
      20 {
        value = {$plugin.caddy.main.currencySymbol}
        noTrimWrap = | ||
      }
    }
    optionsshippingsumnet = COA
    optionsshippingsumnet {
      10 = USER
      10.userFunc = tx_caddy_userfunc->numberformat
      10.userFunc {
        number = TEXT
        number.field = optionsshippingsumnet
        decimal = 2
        dec_point = {$plugin.caddy.main.dec_point}
        thousands_sep = {$plugin.caddy.main.thousands_sep}
        drs = {$plugin.caddy.debug.userfunc}
      }
      20 = TEXT
      20 {
        value = {$plugin.caddy.main.currencySymbol}
        noTrimWrap = | ||
      }
    }
    optionsshippingsumtaxnormal = COA
    optionsshippingsumtaxnormal {
      10 = USER
      10.userFunc = tx_caddy_userfunc->numberformat
      10.userFunc {
        number = TEXT
        number.field = optionsshippingsumtaxnormal
        decimal = 2
        dec_point = {$plugin.caddy.main.dec_point}
        thousands_sep = {$plugin.caddy.main.thousands_sep}
        drs = {$plugin.caddy.debug.userfunc}
      }
      20 = TEXT
      20 {
        value = {$plugin.caddy.main.currencySymbol}
        noTrimWrap = | ||
      }
    }
    optionsshippingsumtaxreduced = COA
    optionsshippingsumtaxreduced {
      10 = USER
      10.userFunc = tx_caddy_userfunc->numberformat
      10.userFunc {
        number = TEXT
        number.field = optionsshippingsumtaxreduced
        decimal = 2
        dec_point = {$plugin.caddy.main.dec_point}
        thousands_sep = {$plugin.caddy.main.thousands_sep}
        drs = {$plugin.caddy.debug.userfunc}
      }
      20 = TEXT
      20 {
        value = {$plugin.caddy.main.currencySymbol}
        noTrimWrap = | ||
      }
    }
  }

    // reduced, normal
  tax =
  tax {
    reduced     = {$plugin.caddy.tax.reduced}
    reducedCalc = {$plugin.caddy.tax.reducedCalc}
    normal      = {$plugin.caddy.tax.normal}
    normalCalc  = {$plugin.caddy.tax.normalCalc}
  }

    // Never remove this property!
  pluginCheck = dummy
}
  // plugin.tx_caddy_pi1



  ///////////////////////////////////////////////////////////////
  //
  // plugin.tx_caddy_pi1.pdf.deliveryorder

plugin.tx_caddy_pi1 {
    // invoice, deliveryorder
  pdf =
  pdf {
      // delivery order PDF
    deliveryorder =
    deliveryorder {

      template = {$plugin.caddy.pdf.deliveryorder.template}

        // order number - page id - label - delivery order number . pdf
      filename = COA
      filename {
          // numberOrderCurrent
        10 = TEXT
        10 {
          field = numberOrderCurrent
          wrap  = |-
        }
          // page id
        20 = TEXT
        20 {
          data = TSFE:id
          wrap  = |-
        }
          // label: deliveryorder
        30 = TEXT
        30 {
          data = LLL:EXT:caddy/pi1/locallang.xml:deliveryorder
          wrap = |-
        }
          // deliver order number
        40 = TEXT
        40 {
          field = numberDeliveryorderCurrent
        }
          // extension pdf
        50 = TEXT
        50 {
          value = pdf
          wrap  = .|
        }
      }

        // addess, caddy, date, numbers, additionaltextblocks
      content = 
      content {
          // deliveryorder, invoice
        address = 
        address {
            // body
          deliveryorder = 
          deliveryorder {
              // content
            header =
            header {
                // label for delivery order address
              content = TEXT
              content {
                value = Lieferaddresse
                lang {
                  de = Lieferaddresse
                  en = delivery address
                }
                wrap      = |<br>
              }
            }
            header >
              // properties, content
            body =
            body {
                // cell, font, textColor
              properties =
              properties {
                  // align, height, width, x, y
                cell =
                cell {
                    // [STRING] L: left. C: center. R: right. empty: left for LTR or right for RTL
                  align = 
                    // [INTEGER] Height of content in millimeter 
                  height = 0
                    // [INTEGER] Width of content in millimeter 
                  width = 0
                    // [INTEGER] Position from left in millimeter 
                  x = {$plugin.caddy.pdf.deliveryorder.address.x}
                    // [INTEGER] Position from top in millimeter 
                  y = {$plugin.caddy.pdf.deliveryorder.address.y}
                }
                  // family, size, stretching, style
                font =
                font {
                    // [String] Arial, Courier, Helvetica, Symbol, Times, ZapfDingbats - or font name
                  family = {$plugin.caddy.pdfGeneral.fontfamily}
                    // [Integer] Font size in points
                  size  = {$plugin.caddy.pdf.deliveryorder.address.fontsize}
                    // [String] Strecth the font (in percent). 100: no effect, 90: smaller, 110: expanded
                  stretching = {$plugin.caddy.pdfGeneral.fontStretching}
                    // empty: regular, B: bold, I: italic, U: underline. Combinations are possible like: BI
                  style =  
                }
                  // [String] color in HTML notation like #CC00CC or #FFF
                textColor = {$plugin.caddy.pdf.textColor.address}
              }
                // Address: company, first name and last name, street, zip and city, country
              content = COA
              content {
                  // Company
                10 = TEXT
                10 {
                  field     = deliveryorderCompany
                  required  = 1
                  wrap      = <b>|</b>
                }
                  // First name and last name
                20 = COA
                20 {
                  // First name
                  10 = TEXT
                  10 {
                    field     = deliveryorderFirstname
                  }
                    // Last name
                  20 = TEXT
                  20 {
                    field       = deliveryorderLastname
                    noTrimWrap  = | ||
                    required    = 1
                  }
                  wrap      = <br />|
                }
                  // Address
                30 = TEXT
                30 {
                  field     = deliveryorderAddress
                  wrap      = <br />|
                  required  = 1
                }
                  // ZIP and city
                40 = COA
                40 {
                    // ZIP
                  10 = TEXT
                  10 {
                    field     = deliveryorderZip
                  }
                    // City
                  20 = TEXT
                  20 {
                    field       = deliveryorderCity
                    noTrimWrap  = | ||
                    required    = 1
                  }
                  wrap      = <br />|
                }
                  // Country
                50 = TEXT
                50 {
                  field     = deliveryorderCountry
                  wrap      = <br />|
                  required  = 1
                }
              }
            }
          }
            // body
          invoice < .deliveryorder
          invoice {
            body {
              content = COA
              content {
                10 {
                  field = invoiceCompany
                }
                20 {
                  10 {
                    field = invoiceFirstname
                  }
                  20 {
                    field = invoiceLastname
                  }
                }
                30 {
                  field = invoiceAddress
                }
                40 {
                  10 {
                    field = invoiceZip
                  }
                  20 {
                    field = invoiceCity
                  }
                }
                50 {
                  field = invoiceCountry
                }
              }
            }
          }
        }

          // body
        caddy = 
        caddy {
            // properties
          body =
          body {
              // cell, font, textColor
            properties =
            properties {
                // align, height, width, x, y
              cell =
              cell {
                  // [STRING] L: left. C: center. R: right. empty: left for LTR or right for RTL
                align = 
                  // [INTEGER] Height of content in millimeter 
                height = 0
                  // [INTEGER] Width of content in millimeter 
                width = {$plugin.caddy.pdf.caddy.width}
                  // [INTEGER] Position from left in millimeter 
                x = {$plugin.caddy.pdf.caddy.x}
                  // [INTEGER] Position from top in millimeter 
                y = {$plugin.caddy.pdf.caddy.y}
              }
                // family, size, stretching, style
              font =
              font {
                  // [String] Courier, Helvetica, Symbol, Times, ZapfDingbats - or font name
                family = {$plugin.caddy.pdfGeneral.fontfamily}
                  // [Integer] Font size in points
                size = {$plugin.caddy.pdf.caddy.fontsize}
                    // [String] Strecth the font (in percent). 100: no effect, 90: smaller, 110: expanded
                stretching = {$plugin.caddy.pdfGeneral.fontStretching}
                // empty: regular, B: bold, I: italic, U: underline. Combinations are possible like: BI
                style =
              }
                // [String] color in HTML notation like #CC00CC or #FFF
              textColor = {$plugin.caddy.pdf.textColor.caddy}
            }
          }
        }

          // body
        date = 
        date {
            // properties, content
          body =
          body {
              // cell, font, textColor
            properties =
            properties {
                // align, height, width, x, y
              cell =
              cell {
                  // [STRING] L: left. C: center. R: right. empty: left for LTR or right for RTL
                align = {$plugin.caddy.pdf.date.align} 
                  // [INTEGER] Height of content in millimeter 
                height = 0
                  // [INTEGER] Width of content in millimeter 
                width = 0
                  // [INTEGER] Position from left in millimeter 
                x = {$plugin.caddy.pdf.date.x}
                  // [INTEGER] Position from top in millimeter 
                y = {$plugin.caddy.pdf.date.y}
              }
                // family, size, stretching, style
              font =
              font {
                  // [String] Arial, Courier, Helvetica, Symbol, Times, ZapfDingbats - or font name
                family = {$plugin.caddy.pdfGeneral.fontfamily}
                  // [Integer] Font size in points
                size  = {$plugin.caddy.pdf.date.fontsize}
                  // [String] Strecth the font (in percent). 100: no effect, 90: smaller, 110: expanded
                stretching = {$plugin.caddy.pdfGeneral.fontStretching}
                  // empty: regular, B: bold, I: italic, U: underline. Combinations are possible like: BI
                style =  
              }
                // [String] color in HTML notation like #CC00CC or #FFF
              textColor = {$plugin.caddy.pdf.textColor.date}
            }
              // label, prefix, ordernumber
            content = TEXT
            content {
              data      = date : U
              strftime  = {$plugin.caddy.pdf.date.strftime} 
            }
          }
        }

          // deliveryorder, invoice and order
        numbers = 
        numbers {
            // body
          deliveryorder = 
          deliveryorder {
              // properties, content
            body =
            body {
                // cell, font, textColor
              properties =
              properties {
                  // align, height, width, x, y
                cell =
                cell {
                    // [STRING] L: left. C: center. R: right. empty: left for LTR or right for RTL
                  align = 
                    // [INTEGER] Height of content in millimeter 
                  height = 0
                    // [INTEGER] Width of content in millimeter 
                  width = 0
                    // [INTEGER] Position from left in millimeter 
                  x = {$plugin.caddy.pdf.deliveryorder.number.x}
                    // [INTEGER] Position from top in millimeter 
                  y = {$plugin.caddy.pdf.deliveryorder.number.y}
                }
                  // family, size, stretching, style
                font =
                font {
                    // [String] Arial, Courier, Helvetica, Symbol, Times, ZapfDingbats - or font name
                  family = {$plugin.caddy.pdfGeneral.fontfamily}
                    // [Integer] Font size in points
                  size  = {$plugin.caddy.pdf.deliveryorder.number.fontsize}
                    // [String] Strecth the font (in percent). 100: no effect, 90: smaller, 110: expanded
                  stretching = {$plugin.caddy.pdfGeneral.fontStretching}
                    // empty: regular, B: bold, I: italic, U: underline. Combinations are possible like: BI
                  style =  
                }
                  // [String] color in HTML notation like #CC00CC or #FFF
                textColor = {$plugin.caddy.pdf.textColor.numberDeliveryorder}
              }
                // label, prefix, ordernumber
              content = COA
              content {
                  // label
                10 = TEXT
                10 {
                  data = LLL:EXT:caddy/pi1/locallang.xml:deliveryordernumber
                  noTrimWrap = || |
                }
                  // prefix
                20 = TEXT
                20 {
                  value = {$plugin.caddy.pdf.deliveryorder.number.prefix}
                }
                  // ordernumber
                30 = TEXT
                30 {
                  field = numberDeliveryorderCurrent
                }
              }
            }
          }
            // body
          orderAndInvoice = 
          orderAndInvoice {
              // properties, content
            body =
            body {
                // cell, font, textColor
              properties =
              properties {
                  // align, height, width, x, y
                cell =
                cell {
                    // [STRING] L: left. C: center. R: right. empty: left for LTR or right for RTL
                  align = 
                    // [INTEGER] Height of content in millimeter 
                  height = 0
                    // [INTEGER] Width of content in millimeter 
                  width = 0
                    // [INTEGER] Position from left in millimeter 
                  x = {$plugin.caddy.pdf.deliveryorder.number.x}
                    // [INTEGER] Position from top in millimeter relative to delivery order number
                  y = TEXT
                  y {
                    value       = {$plugin.caddy.pdf.deliveryorder.number.y} + 10
                    prioriCalc  = intval
                  }
                }
                  // family, size, stretching, style
                font =
                font {
                    // [String] Arial, Courier, Helvetica, Symbol, Times, ZapfDingbats - or font name
                  family = {$plugin.caddy.pdfGeneral.fontfamily}
                    // [Integer] Font size in points, taken from caddy.fontsize
                  size = {$plugin.caddy.pdf.caddy.fontsize}
                    // [String] Strecth the font (in percent). 100: no effect, 90: smaller, 110: expanded
                  stretching = {$plugin.caddy.pdfGeneral.fontStretching}
                    // empty: regular, B: bold, I: italic, U: underline. Combinations are possible like: BI
                  style =  
                }
                  // [String] color in HTML notation like #CC00CC or #FFF
                textColor = {$plugin.caddy.pdf.textColor.numberLine}
              }
                // ordernumber devider invoicenumber
              content = COA
              content {
                  // label, prefix, ordernumber
                10 = COA
                10 {
                    // label
                  10 = TEXT
                  10 {
                    data = LLL:EXT:caddy/pi1/locallang.xml:ordernumber
                    noTrimWrap = || |
                  }
                    // prefix
                  20 = TEXT
                  20 {
                    value = {$plugin.caddy.pdf.order.number.prefix}
                  }
                    // ordernumber
                  30 = TEXT
                  30 {
                    field = numberOrderCurrent
                  }
                }
                  // devider
                20 = TEXT
                20 {
                  value       = |
                  noTrimWrap  = | | |
                }
                  // label, prefix, invoicenumber
                30 = COA
                30 {
                    // label
                  10 = TEXT
                  10 {
                    data = LLL:EXT:caddy/pi1/locallang.xml:invoicenumber
                    noTrimWrap = || |
                  }
                    // prefix
                  20 = TEXT
                  20 {
                    value = {$plugin.caddy.pdf.invoice.number.prefix}
                  }
                    // invoicenumber
                  30 = TEXT
                  30 {
                    field = numberInvoiceCurrent
                  }
                }
              }
            }
          }
        }
      }

    }
  }
}
  // plugin.tx_caddy_pi1.pdf.deliveryorder



  ///////////////////////////////////////////////////////////////
  //
  // plugin.tx_caddy_pi1.pdf.invoice

plugin.tx_caddy_pi1 {
  pdf {
      // invoice PDF
    invoice =
    invoice {

      template = {$plugin.caddy.pdf.invoice.template}

        // order number - page id - label - invoicenumber . pdf
      filename = COA
      filename {
          // numberOrderCurrent
        10 = TEXT
        10 {
          field = numberOrderCurrent
          wrap  = |-
        }
          // page id
        20 = TEXT
        20 {
          data = TSFE:id
          wrap  = |-
        }
          // label: invoice
        30 = TEXT
        30 {
          data = LLL:EXT:caddy/pi1/locallang.xml:invoice
          wrap = |-
        }
          // invoicenumber
        40 = TEXT
        40 {
          field = numberInvoiceCurrent
        }
          // extension pdf
        50 = TEXT
        50 {
          value = pdf
          wrap  = .|
        }
      }

        // addess, caddy, date, numbers, additionaltextblocks
      content = 
      content {
          // deliveryorder, invoice
        address = 
        address {
            // header, body
          deliveryorder = 
          deliveryorder {
              // content
            header =
            header {
                // label for delivery order address
              content = TEXT
              content {
                data = LLL:EXT:caddy/pi1/locallang.xml:deliveryaddress
                wrap      = |<br>
              }
            }
              // properties, content
            body =
            body {
                // cell, font, textColor
              properties =
              properties {
                  // align, height, width, x, y
                cell =
                cell {
                    // [STRING] L: left. C: center. R: right. empty: left for LTR or right for RTL
                  align = 
                    // [INTEGER] Height of content in millimeter 
                  height = 0
                    // [INTEGER] Width of content in millimeter 
                  width = 0
                    // [INTEGER] Position from left in millimeter 
                  x = TEXT
                  x {
                    value       = {$plugin.caddy.pdf.invoice.address.x} + 100
                    prioriCalc  = 1
                  }
                    // [INTEGER] Position from top in millimeter 
                  y = TEXT
                  y {
                    value       = {$plugin.caddy.pdf.invoice.address.y} - 6
                    prioriCalc  = 1
                  }
                }
                  // family, size, stretching, style
                font =
                font {
                    // [String] Arial, Courier, Helvetica, Symbol, Times, ZapfDingbats - or font name
                  family = {$plugin.caddy.pdfGeneral.fontfamily}
                    // [Integer] Font size in points
                  size  = {$plugin.caddy.pdf.deliveryorder.address.fontsize}
                    // [String] Strecth the font (in percent). 100: no effect, 90: smaller, 110: expanded
                  stretching = {$plugin.caddy.pdfGeneral.fontStretching}
                    // empty: regular, B: bold, I: italic, U: underline. Combinations are possible like: BI
                  style =  
                }
                  // [String] color in HTML notation like #CC00CC or #FFF
                textColor = {$plugin.caddy.pdf.textColor.address}
              }
                // Address: company, first name and last name, street, zip and city, country
              content = COA
              content {
                  // Company
                10 = TEXT
                10 {
                  field     = deliveryorderCompany
                  required  = 1
                  wrap      = <b>|</b>
                }
                  // First name and last name
                20 = COA
                20 {
                  // First name
                  10 = TEXT
                  10 {
                    field     = deliveryorderFirstname
                  }
                    // Last name
                  20 = TEXT
                  20 {
                    field       = deliveryorderLastname
                    noTrimWrap  = | ||
                    required    = 1
                  }
                  wrap      = <br />|
                }
                  // Address
                30 = TEXT
                30 {
                  field     = deliveryorderAddress
                  wrap      = <br />|
                  required  = 1
                }
                  // ZIP and city
                40 = COA
                40 {
                    // ZIP
                  10 = TEXT
                  10 {
                    field     = deliveryorderZip
                  }
                    // City
                  20 = TEXT
                  20 {
                    field       = deliveryorderCity
                    noTrimWrap  = | ||
                    required    = 1
                  }
                  wrap      = <br />|
                }
                  // Country
                50 = TEXT
                50 {
                  field     = deliveryorderCountry
                  wrap      = <br />|
                  required  = 1
                }
              }
            }
          }
            // body
          invoice = 
          invoice {
              // properties, content
            body =
            body {
                // cell, font, textColor
              properties =
              properties {
                  // align, height, width, x, y
                cell =
                cell {
                    // [STRING] L: left. C: center. R: right. empty: left for LTR or right for RTL
                  align = 
                    // [INTEGER] Height of content in millimeter 
                  height = 0
                    // [INTEGER] Width of content in millimeter 
                  width = 0
                    // [INTEGER] Position from left in millimeter 
                  x = {$plugin.caddy.pdf.invoice.address.x}
                    // [INTEGER] Position from top in millimeter 
                  y = {$plugin.caddy.pdf.invoice.address.y}
                }
                  // family, size, stretching, style
                font =
                font {
                    // [String] Arial, Courier, Helvetica, Symbol, Times, ZapfDingbats - or font name
                  family = {$plugin.caddy.pdfGeneral.fontfamily}
                    // [Integer] Font size in points
                  size  = {$plugin.caddy.pdf.invoice.address.fontsize}
                    // [String] Strecth the font (in percent). 100: no effect, 90: smaller, 110: expanded
                  stretching = {$plugin.caddy.pdfGeneral.fontStretching}
                    // empty: regular, B: bold, I: italic, U: underline. Combinations are possible like: BI
                  style =  
                }
                  // [String] color in HTML notation like #CC00CC or #FFF
                textColor = {$plugin.caddy.pdf.textColor.address}
              }
                // Address: company, first name and last name, street, zip and city, country
              content = COA
              content {
                  // Company
                10 = TEXT
                10 {
                  field     = invoiceCompany
                  required  = 1
                  wrap      = <b>|</b>
                }
                  // First name and last name
                20 = COA
                20 {
                  // First name
                  10 = TEXT
                  10 {
                    field     = invoiceFirstname
                    required  = 1
                    wrap      = <br />|
                  }
                    // Last name
                  20 = TEXT
                  20 {
                    field       = invoiceLastname
                    noTrimWrap  = | ||
                    required    = 1
                  }
                }
                  // Address
                30 = TEXT
                30 {
                  field     = invoiceAddress
                  wrap      = <br />|
                  required  = 1
                }
                  // ZIP and city
                40 = COA
                40 {
                    // ZIP
                  10 = TEXT
                  10 {
                    field     = invoiceZip
                    required  = 1
                    wrap      = <br />|
                  }
                    // City
                  20 = TEXT
                  20 {
                    field       = invoiceCity
                    noTrimWrap  = | ||
                    required    = 1
                  }
                }
                  // Country
                50 = TEXT
                50 {
                  field     = invoiceCountry
                  wrap      = <br />|
                  required  = 1
                }
              }
            }
          }
        }

          // body
        caddy = 
        caddy {
            // properties
          body =
          body {
              // cell, font, textColor
            properties =
            properties {
                // align, height, width, x, y
              cell =
              cell {
                  // [STRING] L: left. C: center. R: right. empty: left for LTR or right for RTL
                align = 
                  // [INTEGER] Height of content in millimeter 
                height = 0
                  // [INTEGER] Width of content in millimeter 
                width = {$plugin.caddy.pdf.caddy.width}
                  // [INTEGER] Position from left in millimeter 
                x = {$plugin.caddy.pdf.caddy.x}
                  // [INTEGER] Position from top in millimeter 
                y = {$plugin.caddy.pdf.caddy.y}
              }
                // family, size, stretching, style
              font =
              font {
                  // [String] Courier, Helvetica, Symbol, Times, ZapfDingbats - or font name
                family = {$plugin.caddy.pdfGeneral.fontfamily}
                  // [Integer] Font size in points
                size = {$plugin.caddy.pdf.caddy.fontsize}
                  // [String] Strecth the font (in percent). 100: no effect, 90: smaller, 110: expanded
                stretching = {$plugin.caddy.pdfGeneral.fontStretching}
                  // empty: regular, B: bold, I: italic, U: underline. Combinations are possible like: BI
                style =
              }
                // [String] color in HTML notation like #CC00CC or #FFF
              textColor = {$plugin.caddy.pdf.textColor.caddy}
            }
          }
        }

          // body
        date = 
        date {
            // properties, content
          body =
          body {
              // cell, font, textColor
            properties =
            properties {
                // align, height, width, x, y
              cell =
              cell {
                  // [STRING] L: left. C: center. R: right. empty: left for LTR or right for RTL
                align = {$plugin.caddy.pdf.date.align} 
                  // [INTEGER] Height of content in millimeter 
                height = 0
                  // [INTEGER] Width of content in millimeter 
                width = 0
                  // [INTEGER] Position from left in millimeter 
                x = {$plugin.caddy.pdf.date.x}
                  // [INTEGER] Position from top in millimeter 
                y = {$plugin.caddy.pdf.date.y}
              }
                // family, size, stretching, style
              font =
              font {
                  // [String] Arial, Courier, Helvetica, Symbol, Times, ZapfDingbats - or font name
                family = {$plugin.caddy.pdfGeneral.fontfamily}
                  // [Integer] Font size in points
                size  = {$plugin.caddy.pdf.date.fontsize}
                  // [String] Strecth the font (in percent). 100: no effect, 90: smaller, 110: expanded
                stretching = {$plugin.caddy.pdfGeneral.fontStretching}
                  // empty: regular, B: bold, I: italic, U: underline. Combinations are possible like: BI
                style =  
              }
                // [String] color in HTML notation like #CC00CC or #FFF
              textColor = {$plugin.caddy.pdf.textColor.date}
            }
              // label, prefix, ordernumber
            content = TEXT
            content {
              data      = date : U
              strftime  = {$plugin.caddy.pdf.date.strftime} 
            }
          }
        }

          // deliveryorder, invoice and order
        numbers = 
        numbers {
            // body
          invoice = 
          invoice {
              // properties, content
            body =
            body {
                // cell, font, textColor
              properties =
              properties {
                  // align, height, width, x, y
                cell =
                cell {
                    // [STRING] L: left. C: center. R: right. empty: left for LTR or right for RTL
                  align = 
                    // [INTEGER] Height of content in millimeter 
                  height = 0
                    // [INTEGER] Width of content in millimeter 
                  width = 0
                    // [INTEGER] Position from left in millimeter 
                  x = {$plugin.caddy.pdf.invoice.number.x}
                    // [INTEGER] Position from top in millimeter 
                  y = {$plugin.caddy.pdf.invoice.number.y}
                }
                  // family, size, stretching, style
                font =
                font {
                    // [String] Arial, Courier, Helvetica, Symbol, Times, ZapfDingbats - or font name
                  family = {$plugin.caddy.pdfGeneral.fontfamily}
                    // [Integer] Font size in points
                  size  = {$plugin.caddy.pdf.invoice.number.fontsize}
                    // [String] Strecth the font (in percent). 100: no effect, 90: smaller, 110: expanded
                  stretching = {$plugin.caddy.pdfGeneral.fontStretching}
                    // empty: regular, B: bold, I: italic, U: underline. Combinations are possible like: BI
                  style =  
                }
                  // [String] color in HTML notation like #CC00CC or #FFF
                textColor = {$plugin.caddy.pdf.textColor.numberInvoice}
              }
                // label, prefix, ordernumber
              content = COA
              content {
                  // label
                10 = TEXT
                10 {
                  data = LLL:EXT:caddy/pi1/locallang.xml:invoicenumber
                  noTrimWrap = || |
                }
                  // prefix
                20 = TEXT
                20 {
                  value = {$plugin.caddy.pdf.invoice.number.prefix}
                }
                  // ordernumber
                30 = TEXT
                30 {
                  field = numberInvoiceCurrent
                }
              }
            }
          }
            // body
          orderAndInvoice = 
          orderAndInvoice {
              // properties, content
            body =
            body {
                // cell, font, textColor
              properties =
              properties {
                  // align, height, width, x, y
                cell =
                cell {
                    // [STRING] L: left. C: center. R: right. empty: left for LTR or right for RTL
                  align = 
                    // [INTEGER] Height of content in millimeter 
                  height = 0
                    // [INTEGER] Width of content in millimeter 
                  width = 0
                    // [INTEGER] Position from left in millimeter 
                  x = {$plugin.caddy.pdf.deliveryorder.number.x}
                    // [INTEGER] Position from top in millimeter relative to delivery order number
                  y = TEXT
                  y {
                    value       = {$plugin.caddy.pdf.deliveryorder.number.y} + 10
                    prioriCalc  = intval
                  }
                }
                  // family, size, stretching, style
                font =
                font {
                    // [String] Arial, Courier, Helvetica, Symbol, Times, ZapfDingbats - or font name
                  family = {$plugin.caddy.pdfGeneral.fontfamily}
                    // [Integer] Font size in points, taken from caddy.fontsize
                  size = {$plugin.caddy.pdf.caddy.fontsize}
                    // [String] Strecth the font (in percent). 100: no effect, 90: smaller, 110: expanded
                  stretching = {$plugin.caddy.pdfGeneral.fontStretching}
                    // empty: regular, B: bold, I: italic, U: underline. Combinations are possible like: BI
                  style =  
                }
                  // [String] color in HTML notation like #CC00CC or #FFF
                textColor = {$plugin.caddy.pdf.textColor.numberLine}
              }
                // ordernumber devider deliveryordernumber
              content = COA
              content {
                  // label, prefix, ordernumber
                10 = COA
                10 {
                    // label
                  10 = TEXT
                  10 {
                    data = LLL:EXT:caddy/pi1/locallang.xml:ordernumber
                    noTrimWrap = || |
                  }
                    // prefix
                  20 = TEXT
                  20 {
                    value = {$plugin.caddy.pdf.order.number.prefix}
                  }
                    // ordernumber
                  30 = TEXT
                  30 {
                    field = numberOrderCurrent
                  }
                }
                  // devider
                20 = TEXT
                20 {
                  value       = |
                  noTrimWrap  = | | |
                }
                  // label, prefix, deliveryordernumber
                30 = COA
                30 {
                    // label
                  10 = TEXT
                  10 {
                    data = LLL:EXT:caddy/pi1/locallang.xml:deliveryordernumber
                    noTrimWrap = || |
                  }
                    // prefix
                  20 = TEXT
                  20 {
                    value = {$plugin.caddy.pdf.deliveryorder.number.prefix}
                  }
                    // deliveryordernumber
                  30 = TEXT
                  30 {
                    field = numberDeliveryorderCurrent
                  }
                }
              }
            }
          }
        }
      }

    }
  }
}
  // plugin.tx_caddy_pi1.pdf.invoice



  ///////////////////////////////////////////////////////////////
  //
  // plugin.tx_caddy_pi1.pdf.revocation

plugin.tx_caddy_pi1 {
  pdf {
      // revocation PDF
    revocation =
    revocation {
        // order number - page id - label . pdf
      filename = COA
      filename {
          // numberOrderCurrent
        10 = TEXT
        10 {
          field = numberOrderCurrent
          wrap  = |-
        }
          // page id
        20 = TEXT
        20 {
          data = TSFE:id
          wrap  = |-
        }
          // label: revocation
        30 = TEXT
        30 {
          value = revocation
          lang {
            de = Widerrufsrecht
            en = revocation
          }
        }
          // extension pdf
        50 = TEXT
        50 {
          value = pdf
          wrap  = .|
        }
      }
        // addess, date, additionaltextblocks
      content = 
      content {
          // invoice
        address = 
        address {
            // body
          invoice = TEXT
          invoice {
              // properties, content
            body =
            body {
                // cell, font, textColor
              properties =
              properties {
                  // align, height, width, x, y
                cell =
                cell {
                    // [STRING] L: left. C: center. R: right. empty: left for LTR or right for RTL
                  align = 
                    // [INTEGER] Height of content in millimeter 
                  height = 0
                    // [INTEGER] Width of content in millimeter 
                  width = 0
                    // [INTEGER] Position from left in millimeter 
                  x = {$plugin.caddy.pdf.invoice.address.x}
                    // [INTEGER] Position from top in millimeter 
                  y = {$plugin.caddy.pdf.invoice.address.y}
                }
                  // family, size, stretching, style
                font =
                font {
                    // [String] Arial, Courier, Helvetica, Symbol, Times, ZapfDingbats - or font name
                  family = {$plugin.caddy.pdfGeneral.fontfamily}
                    // [Integer] Font size in points
                  size  = {$plugin.caddy.pdf.invoice.address.fontsize}
                    // [String] Strecth the font (in percent). 100: no effect, 90: smaller, 110: expanded
                  stretching = {$plugin.caddy.pdfGeneral.fontStretching}
                    // empty: regular, B: bold, I: italic, U: underline. Combinations are possible like: BI
                  style =  
                }
                  // [String] color in HTML notation like #CC00CC or #FFF
                textColor = {$plugin.caddy.pdf.textColor.address}
              }
                // Address: company, first name and last name, street, zip and city, country
              content = COA
              content {
                  // Company
                10 = TEXT
                10 {
                  field     = invoiceCompany
                  required  = 1
                  wrap      = <b>|</b>
                }
                  // First name and last name
                20 = COA
                20 {
                  // First name
                  10 = TEXT
                  10 {
                    field     = invoiceFirstname
                    required  = 1
                    wrap      = <br />|
                  }
                    // Last name
                  20 = TEXT
                  20 {
                    field       = invoiceLastname
                    noTrimWrap  = | ||
                    required    = 1
                  }
                }
                  // Address
                30 = TEXT
                30 {
                  field     = invoiceAddress
                  wrap      = <br />|
                  required  = 1
                }
                  // ZIP and city
                40 = COA
                40 {
                    // ZIP
                  10 = TEXT
                  10 {
                    field     = invoiceZip
                    required  = 1
                    wrap      = <br />|
                  }
                    // City
                  20 = TEXT
                  20 {
                    field       = invoiceCity
                    noTrimWrap  = | ||
                    required    = 1
                  }
                }
                  // Country
                50 = TEXT
                50 {
                  field     = invoiceCountry
                  wrap      = <br />|
                  required  = 1
                }
              }
            }
          }
        }

          // body
        date = 
        date {
            // properties, content
          body =
          body {
              // cell, font, textColor
            properties =
            properties {
                // align, height, width, x, y
              cell =
              cell {
                  // [STRING] L: left. C: center. R: right. empty: left for LTR or right for RTL
                align = {$plugin.caddy.pdf.date.align} 
                  // [INTEGER] Height of content in millimeter 
                height = 0
                  // [INTEGER] Width of content in millimeter 
                width = 0
                  // [INTEGER] Position from left in millimeter 
                x = {$plugin.caddy.pdf.date.x}
                  // [INTEGER] Position from top in millimeter 
                y = {$plugin.caddy.pdf.date.y}
              }
                // family, size, stretching, style
              font =
              font {
                  // [String] Arial, Courier, Helvetica, Symbol, Times, ZapfDingbats - or font name
                family = {$plugin.caddy.pdfGeneral.fontfamily}
                  // [Integer] Font size in points
                size  = {$plugin.caddy.pdf.date.fontsize}
                  // [String] Strecth the font (in percent). 100: no effect, 90: smaller, 110: expanded
                stretching = {$plugin.caddy.pdfGeneral.fontStretching}
                  // empty: regular, B: bold, I: italic, U: underline. Combinations are possible like: BI
                style =  
              }
                // [String] color in HTML notation like #CC00CC or #FFF
              textColor = {$plugin.caddy.pdf.textColor.date}
            }
              // label, prefix, ordernumber
            content = TEXT
            content {
              data      = date : U
              strftime  = {$plugin.caddy.pdf.date.strftime} 
            }
          }
        }

          // revocation
        additionaltextblocks =
        additionaltextblocks {
            // body
          revocation =
          revocation {
              // properties, content
            body =
            body {
                // cell, font, textColor
              properties =
              properties {
                  // align, height, width, x, y
                cell =
                cell {
                    // [STRING] L: left. C: center. R: right. empty: left for LTR or right for RTL
                  align = {$plugin.caddy.pdf.revocation.align} 
                    // [INTEGER] Height of content in millimeter 
                  height = 0
                    // [INTEGER] Width of content in millimeter 
                  width = 0
                    // [INTEGER] Position from left in millimeter 
                  x = {$plugin.caddy.pdf.revocation.x}
                    // [INTEGER] Position from top in millimeter 
                  y = {$plugin.caddy.pdf.revocation.y}
                }
                  // family, size, stretching, style
                font =
                font {
                    // [String] Arial, Courier, Helvetica, Symbol, Times, ZapfDingbats - or font name
                  family = {$plugin.caddy.pdfGeneral.fontfamily}
                    // [Integer] Font size in points
                  size  = {$plugin.caddy.pdf.revocation.fontsize}
                    // [String] Strecth the font (in percent). 100: no effect, 90: smaller, 110: expanded
                  stretching = {$plugin.caddy.pdfGeneral.fontStretching}
                    // empty: regular, B: bold, I: italic, U: underline. Combinations are possible like: BI
                  style =  
                }
                  // [String] color in HTML notation like #CC00CC or #FFF
                textColor = {$plugin.caddy.pdf.textColor.revocation}
              }
                // label, prefix, ordernumber
              content < styles.content.get
              content {
                select {
                  pidInList = {$plugin.caddy.pages.revocation}
                }
              }
            }
          }
        }

      }
    }
  }
}
  // plugin.tx_caddy_pi1.pdf.revocation



  ///////////////////////////////////////////////////////////////
  //
  // plugin.tx_caddy_pi1.pdf.terms

plugin.tx_caddy_pi1 {
  pdf {
      // terms PDF
    terms =
    terms {
        // order number - page id - label . pdf
      filename = COA
      filename {
          // numberOrderCurrent
        10 = TEXT
        10 {
          field = numberOrderCurrent
          wrap  = |-
        }
          // page id
        20 = TEXT
        20 {
          data = TSFE:id
          wrap  = |-
        }
          // label: terms
        30 = TEXT
        30 {
          value = terms
          lang {
            de = AGB
            en = terms
          }
        }
          // extension pdf
        50 = TEXT
        50 {
          value = pdf
          wrap  = .|
        }
      }
        // addess, date, additionaltextblocks
      content = 
      content {
          // invoice
        address = 
        address {
            // body
          invoice = TEXT
          invoice {
              // properties, content
            body =
            body {
                // cell, font, textColor
              properties =
              properties {
                  // align, height, width, x, y
                cell =
                cell {
                    // [STRING] L: left. C: center. R: right. empty: left for LTR or right for RTL
                  align = 
                    // [INTEGER] Height of content in millimeter 
                  height = 0
                    // [INTEGER] Width of content in millimeter 
                  width = 0
                    // [INTEGER] Position from left in millimeter 
                  x = {$plugin.caddy.pdf.invoice.address.x}
                    // [INTEGER] Position from top in millimeter 
                  y = {$plugin.caddy.pdf.invoice.address.y}
                }
                  // family, size, stretching, style
                font =
                font {
                    // [String] Arial, Courier, Helvetica, Symbol, Times, ZapfDingbats - or font name
                  family = {$plugin.caddy.pdfGeneral.fontfamily}
                    // [Integer] Font size in points
                  size  = {$plugin.caddy.pdf.invoice.address.fontsize}
                    // [String] Strecth the font (in percent). 100: no effect, 90: smaller, 110: expanded
                  stretching = {$plugin.caddy.pdfGeneral.fontStretching}
                    // empty: regular, B: bold, I: italic, U: underline. Combinations are possible like: BI
                  style =  
                }
                  // [String] color in HTML notation like #CC00CC or #FFF
                textColor = {$plugin.caddy.pdf.textColor.address}
              }
                // Address: company, first name and last name, street, zip and city, country
              content = COA
              content {
                  // Company
                10 = TEXT
                10 {
                  field     = invoiceCompany
                  required  = 1
                  wrap      = <b>|</b>
                }
                  // First name and last name
                20 = COA
                20 {
                  // First name
                  10 = TEXT
                  10 {
                    field     = invoiceFirstname
                    required  = 1
                    wrap      = <br />|
                  }
                    // Last name
                  20 = TEXT
                  20 {
                    field       = invoiceLastname
                    noTrimWrap  = | ||
                    required    = 1
                  }
                }
                  // Address
                30 = TEXT
                30 {
                  field     = invoiceAddress
                  wrap      = <br />|
                  required  = 1
                }
                  // ZIP and city
                40 = COA
                40 {
                    // ZIP
                  10 = TEXT
                  10 {
                    field     = invoiceZip
                    required  = 1
                    wrap      = <br />|
                  }
                    // City
                  20 = TEXT
                  20 {
                    field       = invoiceCity
                    noTrimWrap  = | ||
                    required    = 1
                  }
                }
                  // Country
                50 = TEXT
                50 {
                  field     = invoiceCountry
                  wrap      = <br />|
                  required  = 1
                }
              }
            }
          }
        }

          // body
        date = 
        date {
            // properties, content
          body =
          body {
              // cell, font, textColor
            properties =
            properties {
                // align, height, width, x, y
              cell =
              cell {
                  // [STRING] L: left. C: center. R: right. empty: left for LTR or right for RTL
                align = {$plugin.caddy.pdf.date.align} 
                  // [INTEGER] Height of content in millimeter 
                height = 0
                  // [INTEGER] Width of content in millimeter 
                width = 0
                  // [INTEGER] Position from left in millimeter 
                x = {$plugin.caddy.pdf.date.x}
                  // [INTEGER] Position from top in millimeter 
                y = {$plugin.caddy.pdf.date.y}
              }
                // family, size, stretching, style
              font =
              font {
                  // [String] Arial, Courier, Helvetica, Symbol, Times, ZapfDingbats - or font name
                family = {$plugin.caddy.pdfGeneral.fontfamily}
                  // [Integer] Font size in points
                size  = {$plugin.caddy.pdf.date.fontsize}
                  // [String] Strecth the font (in percent). 100: no effect, 90: smaller, 110: expanded
                stretching = {$plugin.caddy.pdfGeneral.fontStretching}
                  // empty: regular, B: bold, I: italic, U: underline. Combinations are possible like: BI
                style =  
              }
                // [String] color in HTML notation like #CC00CC or #FFF
              textColor = {$plugin.caddy.pdf.textColor.date}
            }
              // label, prefix, ordernumber
            content = TEXT
            content {
              data      = date : U
              strftime  = {$plugin.caddy.pdf.date.strftime} 
            }
          }
        }

          // terms
        additionaltextblocks =
        additionaltextblocks {
            // body
          terms =
          terms {
              // properties, content
            body =
            body {
                // cell, font, textColor
              properties =
              properties {
                  // align, height, width, x, y
                cell =
                cell {
                    // [STRING] L: left. C: center. R: right. empty: left for LTR or right for RTL
                  align = {$plugin.caddy.pdf.terms.align} 
                    // [INTEGER] Height of content in millimeter 
                  height = 0
                    // [INTEGER] Width of content in millimeter 
                  width = 0
                    // [INTEGER] Position from left in millimeter 
                  x = {$plugin.caddy.pdf.terms.x}
                    // [INTEGER] Position from top in millimeter 
                  y = {$plugin.caddy.pdf.terms.y}
                }
                  // family, size, stretching, style
                font =
                font {
                    // [String] Arial, Courier, Helvetica, Symbol, Times, ZapfDingbats - or font name
                  family = {$plugin.caddy.pdfGeneral.fontfamily}
                    // [Integer] Font size in points
                  size  = {$plugin.caddy.pdf.terms.fontsize}
                    // [String] Strecth the font (in percent). 100: no effect, 90: smaller, 110: expanded
                  stretching = {$plugin.caddy.pdfGeneral.fontStretching}
                    // empty: regular, B: bold, I: italic, U: underline. Combinations are possible like: BI
                  style =  
                }
                  // [String] color in HTML notation like #CC00CC or #FFF
                textColor = {$plugin.caddy.pdf.textColor.terms}
              }
                // label, prefix, ordernumber
              content < styles.content.get
              content {
                select {
                  pidInList = {$plugin.caddy.pages.terms}
                }
              }
            }
          }
        }

      }
    }
  }
}
  // plugin.tx_caddy_pi1.pdf.terms



  ///////////////////////////////////////////////////////////////
  //
  // plugin.tx_caddy_pi1._HTMLMARKER

plugin.tx_caddy_pi1 {
    // linktoshop
  _HTMLMARKER =
  _HTMLMARKER {
      // label, icon. Replaces _HTMLMARKER_LINTOSHOP
    linktoshop = COA
    linktoshop {
        // Label
      10 = TEXT
      10 {
        data = LLL:EXT:caddy/pi1/locallang.xml:linktoshop
        typolink {
          parameter = {$plugin.caddy.pages.shop}
          title {
            data = LLL:EXT:caddy/pi1/locallang.xml:linktoshop
          }
        }
        noTrimWrap  = || |
      }
        // Icon
      20 = IMAGE
      20 {
        file = EXT:caddy/files/img/caddy_100_02.png
        altText {
          data = LLL:EXT:caddy/pi1/locallang.xml:shop
        }
        titleText {
          data = LLL:EXT:caddy/pi1/locallang.xml:shop
        }
        params = class="linktoshop"
        imageLinkWrap = 1
        imageLinkWrap {
          enable = 1
          typolink {
            parameter = {$plugin.caddy.pages.shop}
          }
        }
      }
      wrap = <div class="linktoshop caddylinktoshop">|</div>
    }
  }
}
  // plugin.tx_caddy_pi1._HTMLMARKER



  ///////////////////////////////////////////////////////////////
  //
  // plugin.tx_caddy_pi2

plugin.tx_caddy_pi2 {
  main {
    template        = {$plugin.caddy.main.template}
    pid             = {$plugin.caddy.main.pid}
  }
  # map fields of FlexForm with TypoScript / HTML template
  flexfields {
    puid = puid
    title = title
    price = price
    tax = tax
    sku = sku
    attributes {
      min = min
      max = max
      service_attribute_1 = service_attribute_1
      service_attribute_2 = service_attribute_2
      service_attribute_3 = service_attribute_3
    }
  }
}
  // plugin.tx_caddy_pi2



  ///////////////////////////////////////////////////////////////
  //
  // plugin.tx_caddy_pi3


plugin.tx_caddy_pi3 {
    // template, pid
  main =
  main {
    template        = {$plugin.caddy.main.template}
    pid             = {$plugin.caddy.main.pid}
  }
    // item, marker
  content = 
  content {
      // quantity, label, gross
    item = COA
    item {
        // quantity
      10 = TEXT
      10 {
        field = quantity
        wrap = <div class="quantity itemquantity">|</div>
      }
        // label
      20 = TEXT
      20 {
        field = label
        wrap  = <div class="label itemlabel">|</div>
      }
        // gross
      30 = COA
      30 {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = gross

          decimal       = 2
          dec_point     = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
        wrap = <div class="gross itemgross">|</div>
      }
      wrap = <div class="item minicaddyitem">|</div><div class="caddy_cleaner"></div>
    }
      // quantity, label, gross
    sum = COA
    sum {
        // quantity
      10 = TEXT
      10 {
        field = quantity
        wrap = <div class="quantity sumquantity">|</div>
      }
        // label
      20 = COA
      20 {
          // in case of one item
        10 = TEXT
        10 {
          if {
            value = 2 
            isLessThan {
              field = quantity
            }
          }
          data = LLL:EXT:caddy/pi3/locallang.xml:item
        }
          // in case of more than one item
        20 = TEXT
        20 {
          if {
            value = 2 
            isLessThan {
              field = quantity
            }
            negate  = 1
          }
          data = LLL:EXT:caddy/pi3/locallang.xml:items
        }
        wrap = <div class="label sumlabel">|</div>
      }
        // gross
      30 = COA
      30 {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = gross

          decimal       = 2
          dec_point     = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
        wrap = <div class="gross sumgross">|</div><div class="caddy_cleaner"></div>
      }
      wrap = <div class="sum minicaddysum">|</div>
    }
  }
    // linktocaddy, linktoshop
  _HTMLMARKER =
  _HTMLMARKER {
      // label, icon. Replaces _HTMLMARKER_LINTOCADDY
    linktocaddy = COA
    linktocaddy {
        // Label
      10 = TEXT
      10 {
        data = LLL:EXT:caddy/pi3/locallang.xml:linktocaddy
        typolink {
          parameter = {$plugin.caddy.pages.caddy}
          title {
            data = LLL:EXT:caddy/pi3/locallang.xml:linktocaddy
          }
        }
        noTrimWrap  = || |
      }
        // Icon
      20 = IMAGE
      20 {
        file = EXT:caddy/files/img/caddy_100_02.png
        altText {
          data = LLL:EXT:caddy/pi3/locallang.xml:caddy
        }
        titleText {
          data = LLL:EXT:caddy/pi3/locallang.xml:caddy
        }
        params = class="linktocaddy"
        imageLinkWrap = 1
        imageLinkWrap {
          enable = 1
          typolink {
            parameter = {$plugin.caddy.pages.caddy}
          }
        }
      }
      wrap = <div class="linktocaddy minicaddylinktocaddy">|</div>
    }
      // label, icon. Replaces _HTMLMARKER_LINTOSHOP
    linktoshop = COA
    linktoshop {
        // Label
      10 = TEXT
      10 {
        data = LLL:EXT:caddy/pi3/locallang.xml:linktoshop
        typolink {
          parameter = {$plugin.caddy.pages.shop}
          title {
            data = LLL:EXT:caddy/pi3/locallang.xml:linktoshop
          }
        }
        noTrimWrap  = || |
      }
        // Icon
      20 = IMAGE
      20 {
        file = EXT:caddy/files/img/caddy_100_02.png
        altText {
          data = LLL:EXT:caddy/pi3/locallang.xml:shop
        }
        titleText {
          data = LLL:EXT:caddy/pi3/locallang.xml:shop
        }
        params = class="linktoshop"
        imageLinkWrap = 1
        imageLinkWrap {
          enable = 1
          typolink {
            parameter = {$plugin.caddy.pages.shop}
          }
        }
      }
      wrap = <div class="linktoshop minicaddylinktoshop">|</div>
    }
  }
}
  // plugin.tx_caddy_pi3

