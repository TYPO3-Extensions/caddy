

  ///////////////////////////////////////////////////////////////
  //
  // INDEX
  //
  // includeLibs
  // plugin.tx_caddy_pi1
  // plugin.tx_caddy_pi1.pdf
  // plugin.tx_caddy_pi2
  // plugin.tx_caddy_pi3
  // plugin.tx_powermail_pi1



  ///////////////////////////////////////////////////////////////
  //
  // includeLibs

includeLibs {
  user_caddy_powermailCart  = EXT:caddy/lib/user_caddy_powermailCart.php
  tx_caddy_powermail        = EXT:caddy/lib/powermail/class.tx_caddy_powermail.php
  tx_caddy_session          = EXT:caddy/lib/class.tx_caddy_session.php
  tx_caddy_userfunc         = EXT:caddy/lib/userfunc/class.tx_caddy_userfunc.php
}
  // includeLibs



  ///////////////////////////////////////////////////////////////
  //
  // plugin.tx_caddy_pi1

plugin.tx_caddy_pi1 {
    // Minimum price
  cart =
  cart {
    cartmin {
      # set a value for minimal price, this value will be compared with the gross price excluding service cost
      value =
	  # hide service form and powermail form if price is lower than minimal price
	  # right now default setting, do not change it, error handling not styled and localized yet
      hideifnotreached {
        service = 1
        powermail = 1
      }
    }
  }
    // template, currency properties, service attributes
  main = 
  main {
    template        = {$plugin.caddy.main.template}
    decimal         = {$plugin.caddy.main.decimal}
    dec_point       = {$plugin.caddy.main.dec_point}
    thousands_sep   = {$plugin.caddy.main.thousands_sep}
    currencySymbol  = {$plugin.caddy.main.currencySymbol}
    currencySymbolBeforePrice = {$plugin.caddy.main.currencySymbolBeforePrice}
    quantitySymbol  = {$plugin.caddy.main.quantitySymbol}
    service_attribute_1_symbol = {$plugin.caddy.main.service_attribute_1_symbol}
    service_attribute_2_symbol = {$plugin.caddy.main.service_attribute_2_symbol}
    service_attribute_3_symbol = {$plugin.caddy.main.service_attribute_3_symbol}
    pid              = {$plugin.caddy.main.pid}
  }
    // qry, service attributes, puid, sku
  gpvar =
  gpvar {
    qty   = {$plugin.caddy.gpvar.qty}
    service_attribute_1   = {$plugin.caddy.gpvar.service_attribute_1}
    service_attribute_2   = {$plugin.caddy.gpvar.service_attribute_2}
    service_attribute_3   = {$plugin.caddy.gpvar.service_attribute_3}
    puid  = {$plugin.caddy.gpvar.puid}
    sku   = {$plugin.caddy.gpvar.sku}
  }
    // reduced, normal
  tax =
  tax {
    reduced     = {$plugin.caddy.tax.reduced}
    reducedCalc = {$plugin.caddy.tax.reducedCalc}
    normal      = {$plugin.caddy.tax.normal}
    normalCalc  = {$plugin.caddy.tax.normalCalc}
  }
    // table, title, price, tax, sku, min, max, service attributes
  db =
  db {
    table = {$plugin.caddy.db.table}
    title = {$plugin.caddy.db.title}
    price = {$plugin.caddy.db.price}
    tax   = {$plugin.caddy.db.tax}
    sku   = {$plugin.caddy.db.sku}
    min   = {$plugin.caddy.db.min}
    max   = {$plugin.caddy.db.max}
    service_attribute_1   = {$plugin.caddy.db.service_attribute_1}
    service_attribute_2   = {$plugin.caddy.db.service_attribute_2}
    service_attribute_3   = {$plugin.caddy.db.service_attribute_3}
  }
    // uid
  powermailContent =
  powermailContent {
    uid = {$plugin.caddy.powermailContent.uid}
  }
  debug  = {$plugin.caddy.debug.paramsAndTs}

    // titel, price, qty, sku, min, max, weight, volume, tax, puid, cid, fields, overall, powermailCart
  settings =
  settings {

    # GET or POST param for title (if not empty: Overwrite values from db request with puid)
    title = TEXT
    title {
      data = GP:{$plugin.caddy.gpvar.title}
      htmlSpecialChars = 1
    }

    # GET or POST param for price (if not empty: Overwrite values from db request with puid)
    price = TEXT
    price {
      data = GP:{$plugin.caddy.gpvar.price}
      htmlSpecialChars = 1
    }

    # GET or POST param for qty
    qty = TEXT
    qty {
      data = GP:{$plugin.caddy.gpvar.qty}
      intval = 1
    }

    # GET or POST param for sku
    sku = TEXT
    sku {
      data = GP:{$plugin.caddy.gpvar.sku}
      htmlSpecialChars = 1
    }

    # GET or POST param for min
    min = TEXT
    min {
      data = GP:{$plugin.caddy.gpvar.min}
      htmlSpecialChars = 1
    }

    # GET or POST param for max
    max = TEXT
    max {
      data = GP:{$plugin.caddy.gpvar.max}
      htmlSpecialChars = 1
    }

    # GET or POST param for weight
    weight = TEXT
    weight {
      data = GP:{$plugin.caddy.gpvar.weight}
      floatval = 1
    }

    # GET or POST param for volume
    volume = TEXT
    volume {
      data = GP:{$plugin.caddy.gpvar.volume}
      floatval = 1
    }

    # Param for tax (will be overwritten from db request)
    tax = TEXT
    tax.value = {$plugin.caddy.tax.normalCalc}

    # GET or POST param for product uid
    puid = TEXT
    puid {
      data = GP:{$plugin.caddy.gpvar.puid}
      intval = 1
    }

    # GET or POST param for content id
    cid = TEXT
    cid {
      data = GP:{$plugin.caddy.gpvar.cid}
      intval = 1
    }

      // titel, puid, qty, service attributes, min, max, sku, price, delete, tax
    fields =
    fields {
      title = TEXT
      title.field = title

      puid = TEXT
      puid.field = puid

      qty = TEXT
      qty.field = qty

      service_attribute_1 = TEXT
      service_attribute_1.field = service_attribute_1

      service_attribute_2 = TEXT
      service_attribute_2.field = service_attribute_2

      service_attribute_3 = TEXT
      service_attribute_3.field = service_attribute_3

      min = TEXT
      min.field = min

      max = TEXT
      max.field = max

      sku = TEXT
      sku.field = sku

      price = COA
      price {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = price

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      price_total = COA
      price_total {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = price_total

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      delete = IMAGE
      delete {
        file = EXT:caddy/files/img/icon_delete.gif
        altText = delete product
        titleText.data = LLL:EXT:caddy/pi1/locallang.xml:caddy_ll_delete
        params = class="caddy_delete"
        imageLinkWrap = 1
        imageLinkWrap {
          enable = 1
          typolink.parameter.data = page:alias//TSFE:id
          typolink.additionalParams.wrap = &tx_caddy_pi1[del]=|
          typolink.additionalParams.field = puid
        }
      }

      tax = CASE
      tax {
        key.field = tax

        default = TEXT
        default {
          current = 1
          setCurrent.field = price_total
          setCurrent.wrap = (| / (1 + ###TAX###)) * (###TAX###)
          prioriCalc = 1
        }

        # reduced tax
        1 = TEXT
        1 {
          current = 1
          setCurrent.field = price_total
          setCurrent.wrap = (| / (1 + {$plugin.caddy.tax.reducedCalc})) * ({$plugin.caddy.tax.reducedCalc})
          prioriCalc = 1
        }

        # normal tax
        2 = TEXT
        2 {
          current = 1
          setCurrent.field = price_total
          setCurrent.wrap = (| / (1 + {$plugin.caddy.tax.normalCalc})) * ({$plugin.caddy.tax.normalCalc})
          prioriCalc = 1
        }
      }
    }

      // sumNet, sumGross, price_total, service_costs, odernumber, target, taxrates, tax
    overall =
    overall {

      optionsNet = COA
      optionsNet {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = optionsNet

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      optionsGross = COA
      optionsGross {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = optionsGross

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      productsGross = COA
      productsGross {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = productsGross

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      productsNet = COA
      productsNet {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = productsNet

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      sumNet = COA
      sumNet {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = sumNet

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      sumGross = COA
      sumGross {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = sumGross

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      sumTaxNormal = COA
      sumTaxNormal {
        if.isTrue.field = sumTaxNormal
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = sumTaxNormal

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      sumTaxReduced = COA
      sumTaxReduced {
        if.isTrue.field = sumTaxReduced
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = sumTaxReduced

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }

      target = TEXT
      target {
        value = x
        typolink.parameter.data = page:alias//TSFE:id
        typolink.returnLast = url
      }

      taxrate_reduced_string = TEXT
      taxrate_reduced_string {
        value = including
        lang { 
          de = inklusive 
          en = including
        }
        if {
          isTrue {
            field = sumTaxReduced
          }
        }
        noTrimWrap = || {$plugin.caddy.tax.reduced}% |
      }

      taxrate_normal_string = TEXT
      taxrate_normal_string {
        value = including
        lang { 
          de = inklusive 
          en = including
        }
        if {
          isTrue {
            field = sumTaxNormal
          }
        }
        noTrimWrap = || {$plugin.caddy.tax.normal}% |
      }
    }

      // for the userFunc
    powermailCart =
    powermailCart {
      fields < plugin.tx_caddy_pi1.settings.fields
      overall < plugin.tx_caddy_pi1.settings.overall

      overall {
        payment_note = TEXT
        payment_note.field = payment_note

        shipping_option = TEXT
        shipping_option.field = shipping_option

        payment_option = TEXT
        payment_option.field = payment_option

        special_option = TEXT
        special_option.field = special_option
      }
    }
  }

    // preset, options
  shipping =
  shipping {
    #set default shipping method
    preset = 1
      // shipping method 1
    options =
    options {
      1 {
        #title of shipping method
        title = Standard
        #extra cost (gross price) of shipping method
        extra = 0.00
        #tax rate which will be applied (reduced or normal)
        tax = normal
      }
    }
  }

    // preset, options
  payment =
  payment {
    #set default payment method
    preset = 1
      // payment method 1
    options =
    options {
      #payment method 1
      1 {
        #title of payment method
        title = Standard
        #extra cost (gross price) of payment method
        extra = 0.00
        #tax rate which will be applied (reduced or normal)
        tax = normal
      }
    }
  }
    // Never remove this property!
  pluginCheck = dummy
}
  // plugin.tx_caddy_pi1



  ///////////////////////////////////////////////////////////////
  //
  // plugin.tx_caddy_pi1.pdf

plugin.tx_caddy_pi1 {
    // invoice, deliveryorder
  pdf =
  pdf {
      // delivery order PDF
    deliveryorder =
    deliveryorder {
      font-size = 10

      template = {$plugin.caddy.pdf.deliveryorder.template}

        // order number - page id - label - delivery order number . pdf
      filename = COA
      filename {
          // numberOrderCurrent
        10 = TEXT
        10 {
          field = numberOrderCurrent
          wrap  = |-
        }
          // page id
        20 = TEXT
        20 {
          data = TSFE:id
          wrap  = |-
        }
          // label: deliveryorder
        30 = TEXT
        30 {
          value = deliveryorder
          lang {
            de = Lieferschein
            en = deliveryorder
          }
          wrap = |-
        }
          // deliver order number
        40 = TEXT
        40 {
          field = numberDeliveryorderCurrent
        }
          // extension pdf
        50 = TEXT
        50 {
          value = pdf
          wrap  = .|
        }
      }

      body-position-x               = {$plugin.caddy.pdf.deliveryorder.body-position-x}
      body-position-y               = {$plugin.caddy.pdf.deliveryorder.body-position-y}
      body-width                    = {$plugin.caddy.pdf.deliveryorder.body-width}

      deliveryorderaddress = COA
      deliveryorderaddress {
          // Label
        10 = TEXT
        10 {
          value = Lieferaddresse
          lang {
            de = Lieferaddresse
            en = delivery address
          }
          wrap      = |<br>
          required  = 1
        }
          // Company
        20 = TEXT
        20 {
          stdWrap {
            ifEmpty {
              data = TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_packing_slip.default.company}
            }
            wrap      = |<br>
            required  = 1
          }
        }
          // First name and last name
        30 = TEXT
        30 {
          stdWrap {
            ifEmpty {
              dataWrap = {TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_packing_slip.default.first_name}} {TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_packing_slip.default.last_name}}
            }
            wrap      = |<br>
            required  = 1
          }
        }
          // Address
        40 = TEXT
        40 {
          stdWrap {
            ifEmpty {
              data = TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_packing_slip.default.address}
            }
            wrap      = |<br>
            required  = 1
          }
        }
          // ZIP and city
        50 = TEXT
        50 {
          stdWrap {
            ifEmpty {
              dataWrap = {TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_packing_slip.default.zip}} {TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_packing_slip.default.city}}
            }
            wrap      = |<br>
            required  = 1
          }
        }
      }

      deliveryorderaddress-position-x    = {$plugin.caddy.pdf.deliveryorder.deliveryorderaddress-position-x}
      deliveryorderaddress-position-y    = {$plugin.caddy.pdf.deliveryorder.deliveryorderaddress-position-y}

      deliveryordernumber = COA
      deliveryordernumber {
        10 = TEXT
        10 {
          data = LLL:EXT:caddy/pi1/locallang.xml:caddy_ll_deliveryordernumber
          noTrimWrap = ||: |
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.ordernumber.prefix}
        }
        30 = TEXT
        30 {
          current           = 1
          setCurrent.field  = ordernumber
          setCurrent.wrap   = | + {$plugin.caddy.ordernumber.offset}
          prioriCalc        = intval
          value             = {$plugin.caddy.ordernumber.suffix}        
        }
      }

      deliveryordernumber-position-x  = {$plugin.caddy.pdf.deliveryorder.deliveryordernumber-position-x}
      deliveryordernumber-position-y  = {$plugin.caddy.pdf.deliveryorder.deliveryordernumber-position-y}

      invoiceaddress = COA
      invoiceaddress {
          // Company
        1 = COA
        1 {
          10 = TEXT
          10 {
            stdWrap {
              ifEmpty {
                data = TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_order.default.company}
              }
              wrap      = |<br>
              required  = 1
            }
          }
        }
          // First name and last name
        2 = COA
        2 {
          10 = TEXT
          10 {
            stdWrap {
              ifEmpty {
                dataWrap = {TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_order.default.first_name}} {TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_order.default.last_name}}
              }
              wrap      = |<br>
              required  = 1
            }
          }
        }
          // Address
        3 = COA
        3 {
          10 = TEXT
          10 {
            stdWrap {
              ifEmpty {
                data = TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_order.default.address}
              }
              wrap      = |<br>
              required  = 1
            }
          }
        }
          // ZIP and city
        4 = COA
        4 {
          10 = TEXT
          10 {
            stdWrap {
              ifEmpty {
                dataWrap = {TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_order.default.zip}} {TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_order.default.city}}
              }
              wrap      = |<br>
              required  = 1
            }
          }
        }
      }

      invoiceaddress-position-x       = {$plugin.caddy.pdf.deliveryorder.invoiceaddress-position-x}
      invoiceaddress-position-y       = {$plugin.caddy.pdf.deliveryorder.invoiceaddress-position-y}

      additionaltextblocks {
          // date
        1 =
        1 {
          position-x  = 175
          position-y  = 104
          width       = 25
          align       = L
          content = COA
          content {
              // prefix
            10 = TEXT
            10 {
              value =
              noTrimWrap = || |
            }
              // date
            20 = TEXT
            20 {
              data = date : U
              strftime = %Y-%m-%d
            }
          }
        }
          // order line
        2 =
        2 {
          position-x  =  69
          position-y  = 114
          width       = 160
          content = COA
          content {
              // prepended string
            10 = TEXT
            10 {
              value = Ihre Bestellung vom
              lang {
                de = Ihre Bestellung vom
                en = Your order at
              }
              noTrimWrap = || |
            }
              // date
            20 = TEXT
            20 {
              data = date : U
              strftime = %d.%m.%Y
              noTrimWrap = || |
            }
              // appended string
            30 = TEXT
            30 {
              value = bei typo3-quick-shop.de
              lang {
                de = bei typo3-quick-shop.de
                en = on typo3-quick-shop.de
              }
            }
              // delivery number
            40 = COA
            40 {
              // (
              10 = TEXT
              10 {
                value   = (
                noTrimWrap = | ||
              }
                // label
              20 {
                value = Rechnungsnummer
                lang {
                  de = Rechnungsnummer
                  en = invoice number
                }
              }
                // number
              30 = TEXT
              30 {
                value   =  Hier soll die Nr rein
              }
              40 = TEXT
              40 {
                value   = )
                noTrimWrap = || |
              }
            }
          }
        }
      }
    }
      // invoice PDF
    invoice =
    invoice {
      font-size = 10

      template = {$plugin.caddy.pdf.invoice.template}

        // order number - page id - label - invoice number . pdf
      filename = COA
      filename {
          // numberOrderCurrent
        10 = TEXT
        10 {
          field = numberOrderCurrent
          wrap  = |-
        }
          // page id
        20 = TEXT
        20 {
          data = TSFE:id
          wrap  = |-
        }
          // label: invoice
        30 = TEXT
        30 {
          value = invoice
          lang {
            de = Rechnung
            en = invoice
          }
          wrap = |-
        }
          // invoice number
        40 = TEXT
        40 {
          field = numberInvoiceCurrent
        }
          // extension pdf
        50 = TEXT
        50 {
          value = pdf
          wrap  = .|
        }
      }

      body-position-x = {$plugin.caddy.pdf.invoice.body-position-x}
      body-position-y = {$plugin.caddy.pdf.invoice.body-position-y}
      body-width      = {$plugin.caddy.pdf.invoice.body-width}

      deliveryorderaddress = COA
      deliveryorderaddress {
          // Label
        0 = COA
        0 {
          10 = TEXT
          10 {
            value = Lieferaddresse
            lang {
              de = Lieferaddresse
              en = delivery address
            }
            wrap      = |<br>
            required  = 1
          }
        }
          // Company
        1 = COA
        1 {
          10 = TEXT
          10 {
            stdWrap {
              ifEmpty {
                data = TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_packing_slip.default.company}
              }
              wrap      = |<br>
              required  = 1
            }
          }
        }
          // First name and last name
        2 = COA
        2 {
          10 = TEXT
          10 {
            stdWrap {
              ifEmpty {
                dataWrap = {TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_packing_slip.default.first_name}} {TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_packing_slip.default.last_name}}
              }
              wrap      = |<br>
              required  = 1
            }
          }
        }
          // Address
        3 = COA
        3 {
          10 = TEXT
          10 {
            stdWrap {
              ifEmpty {
                data = TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_packing_slip.default.address}
              }
              wrap      = |<br>
              required  = 1
            }
          }
        }
          // ZIP and city
        4 = COA
        4 {
          10 = TEXT
          10 {
            stdWrap {
              ifEmpty {
                dataWrap = {TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_packing_slip.default.zip}} {TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_packing_slip.default.city}}
              }
              wrap      = |<br>
              required  = 1
            }
          }
        }
      }

      deliveryorderaddress-position-x  = {$plugin.caddy.pdf.invoice.deliveryorderaddress-position-x}
      deliveryorderaddress-position-y  = {$plugin.caddy.pdf.invoice.deliveryorderaddress-position-y}

      invoiceaddress = COA
      invoiceaddress {
          // Company
        1 = COA
        1 {
          10 = TEXT
          10 {
            stdWrap {
              ifEmpty {
                data = TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_order.default.company}
              }
              wrap      = |<br>
              required  = 1
            }
          }
        }
          // First name and last name
        2 = COA
        2 {
          10 = TEXT
          10 {
            stdWrap {
              ifEmpty {
                dataWrap = {TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_order.default.first_name}} {TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_order.default.last_name}}
              }
              wrap      = |<br>
              required  = 1
            }
          }
        }
          // Address
        3 = COA
        3 {
          10 = TEXT
          10 {
            stdWrap {
              ifEmpty {
                data = TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_order.default.address}
              }
              wrap      = |<br>
              required  = 1
            }
          }
        }
          // ZIP and city
        4 = COA
        4 {
          10 = TEXT
          10 {
            stdWrap {
              ifEmpty {
                dataWrap = {TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_order.default.zip}} {TSFE:fe_user|sesData|powermail_{$quick_shop.powermail.ids.form.default}|uid{$quick_shop.powermail.ids.address_order.default.city}}
              }
              wrap      = |<br>
              required  = 1
            }
          }
        }
      }

      invoiceaddress-position-x     = {$plugin.caddy.pdf.invoice.invoiceaddress-position-x}
      invoiceaddress-position-y     = {$plugin.caddy.pdf.invoice.invoiceaddress-position-y}

      invoicenumber-position-x      = {$plugin.caddy.pdf.invoice.invoicenumber-position-x}
      invoicenumber-position-y      = {$plugin.caddy.pdf.invoice.invoicenumber-position-y}

      ordernumber = COA
      ordernumber {
        10 = TEXT
        10 {
          data = LLL:EXT:caddy/pi1/locallang.xml:caddy_ll_ordernumber
          noTrimWrap = ||: |
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.ordernumber.prefix}
        }
        30 = TEXT
        30 {
          current           = 1
          setCurrent.field  = ordernumber
          setCurrent.wrap   = | + {$plugin.caddy.ordernumber.offset}
          prioriCalc        = intval
          value             = {$plugin.caddy.ordernumber.suffix}        
        }
      }

      additionaltextblocks {
          // date
        1 =
        1 {
          position-x  = 175
          position-y  = 104
          width       = 25
          align       = L
          content = COA
          content {
              // prefix
            10 = TEXT
            10 {
              value =
              noTrimWrap = || |
            }
              // date
            20 = TEXT
            20 {
              data = date : U
              strftime = %Y-%m-%d
            }
          }
        }
          // order line
        2 =
        2 {
          position-x  =  69
          position-y  = 114
          width       = 160
          content = COA
          content {
              // prepended string
            10 = TEXT
            10 {
              value = Ihre Bestellung vom
              lang {
                de = Ihre Bestellung vom
                en = Your order at
              }
              noTrimWrap = || |
            }
              // date
            20 = TEXT
            20 {
              data = date : U
              strftime = %d.%m.%Y
              noTrimWrap = || |
            }
              // appended string
            30 = TEXT
            30 {
              value = bei typo3-quick-shop.de
              lang {
                de = bei typo3-quick-shop.de
                en = on typo3-quick-shop.de
              }
            }
              // delivery number
            40 = COA
            40 {
              // (
              10 = TEXT
              10 {
                value   = (
                noTrimWrap = | ||
              }
                // label
              20 = TEXT
              20 {
                value = Lieferscheinnummer
                lang {
                  de = Lieferscheinnummer
                  en = delivery number
                }
                noTrimWrap = || |
              }
                // number
              30 = TEXT
              30 {
                value   =  Hier soll die Nr rein
              }
              40 = TEXT
              40 {
                value   = )
                noTrimWrap = || |
              }
            }
          }
        }
      }
    }

      // terms PDF
    terms =
    terms {
        // order number - page id - label . pdf
      filename = COA
      filename {
          // numberOrderCurrent
        10 = TEXT
        10 {
          field = numberOrderCurrent
          wrap  = |-
        }
          // page id
        20 = TEXT
        20 {
          data = TSFE:id
          wrap  = |-
        }
          // label: terms
        30 = TEXT
        30 {
          value = terms
          lang {
            de = AGB
            en = terms
          }
        }
          // extension pdf
        50 = TEXT
        50 {
          value = pdf
          wrap  = .|
        }
      }
    }
  }
}
  // plugin.tx_caddy_pi1.pdf



  ///////////////////////////////////////////////////////////////
  //
  // plugin.tx_caddy_pi2

plugin.tx_caddy_pi2 {
  main {
    template        = {$plugin.caddy.main.template}
    pid             = {$plugin.caddy.main.pid}
  }
  # map fields of FlexForm with TypoScript / HTML template
  flexfields {
    puid = puid
    title = title
    price = price
    tax = tax
    sku = sku
    attributes {
      min = min
      max = max
      service_attribute_1 = service_attribute_1
      service_attribute_2 = service_attribute_2
      service_attribute_3 = service_attribute_3
    }
  }
}
  // plugin.tx_caddy_pi2



  ///////////////////////////////////////////////////////////////
  //
  // plugin.tx_caddy_pi3


plugin.tx_caddy_pi3 {
  main {
    template        = {$plugin.caddy.main.template}
    pid             = {$plugin.caddy.main.pid}
  }
  settings {
    fields {
      minicart_count = TEXT
      minicart_count.field = count

      minisumGross = COA
      minisumGross {
        10 = USER
        10.userFunc = tx_caddy_userfunc->numberformat
        10.userFunc {
          number = TEXT
          number.field = minisumGross

          decimal = 2
          dec_point = {$plugin.caddy.main.dec_point}
          thousands_sep = {$plugin.caddy.main.thousands_sep}

          drs = {$plugin.caddy.debug.userfunc}
        }
        20 = TEXT
        20 {
          value = {$plugin.caddy.main.currencySymbol}
          noTrimWrap = | ||
        }
      }
    }
  }
}
  // plugin.tx_caddy_pi3



  ///////////////////////////////////////////////////////////////
  //
  // plugin.tx_powermail_pi1

plugin.tx_powermail_pi1 {
  dynamicTyposcript {
      // The caddy content
    caddy = USER
    caddy {
      userFunc = user_caddy_powermailCart->showCaddy
      userFunc {
        drs = {$plugin.caddy.debug.userfunc}
      }
    }
      // Delivery order number
    caddydeliveryordernumber = USER
    caddydeliveryordernumber {
      userFunc = tx_caddy_session->getNumberDeliveryorder
      userFunc {
        drs = {$plugin.caddy.debug.userfunc}
      }
    }
      // Invoice number
    caddyinvoicenumber = USER
    caddyinvoicenumber {
      userFunc = tx_caddy_session->getNumberInvoice
      userFunc {
        drs = {$plugin.caddy.debug.userfunc}
      }
    }
      // Order number
    caddyordernumber = USER
    caddyordernumber {
      userFunc = tx_caddy_session->getNumberOrder
      userFunc {
        drs = {$plugin.caddy.debug.userfunc}
      }
    }
      // Clear the caddy session
    clearcaddysession = USER
    clearcaddysession {
      userFunc = tx_caddy_session->sessionDelete
      userFunc {
        drs = {$plugin.caddy.debug.userfunc}
      }
    }
  }
  email {
    recipient_mail {
      addAttachment {
          // Caddy: Invoice
        45967 = USER
        45967 {
          userFunc = tx_caddy_powermail->sendInvoiceToVendor
          userFunc {
            drs = {$plugin.caddy.debug.userfunc}
          }
        }
          // Caddy: Delivery Order
        45968 = USER
        45968 {
          userFunc = tx_caddy_powermail->sendDeliveryorderToVendor
          userFunc {
            drs = {$plugin.caddy.debug.userfunc}
          }
        }
          // Caddy: Terms & Conditions
        45969 = USER
        45969 {
          userFunc = tx_caddy_powermail->sendTermsToVendor
          userFunc {
            drs = {$plugin.caddy.debug.userfunc}
          }
        }
      }
    }
    sender_mail {
      addAttachment {
          // Caddy: Invoice
        45967 = USER
        45967 {
          userFunc = tx_caddy_powermail->sendInvoiceToCustomer
          userFunc {
            drs = {$plugin.caddy.debug.userfunc}
          }
        }
          // Caddy: Delivery Order
        45968 = USER
        45968 {
          userFunc = tx_caddy_powermail->sendDeliveryorderToCustomer
          userFunc {
            drs = {$plugin.caddy.debug.userfunc}
          }
        }
          // Caddy: Terms & Conditions
        45969 = USER
        45969 {
          userFunc = tx_caddy_powermail->sendTermsToCustomer
          userFunc {
            drs = {$plugin.caddy.debug.userfunc}
          }
        }
      }
    }
  }
}
  // plugin.tx_powermail_pi1
